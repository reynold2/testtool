[20:59:24-733][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:24-734][WARN] libpng warning: iCCP: cHRM chunk does not match sRGB
[20:59:24-774][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:24-856][DEBUG] ExtensionStorage > dbpath: "D:/work/testtool/tool/res/QxPlugin/config/app/extension.dat" "D:/work/testtool/tool/res/QxPlugin/config/app/extension.dat"
[20:59:24-885][DEBUG] Framework Configure: 
 |-> plugin dir:            "D:/work/testtool/tool/res/QxPlugin/plugins" 
 |-> language dir:          "D:/work/testtool/tool/res/QxPlugin/languages" 
 |-> config dir:            "D:/work/testtool/tool/res/QxPlugin/config/app" 
 |-> language:              "zh_CN" 
 |-> loadEnabledPluginOnly: false 
 |-> watchingPluginDir:     true
[20:59:24-885][DEBUG] [PluginManager] > installPlugins:
[20:59:24-886][DEBUG]  |-> "myPluginzxcvbnm"
[20:59:24-887][DEBUG]  |-> "tech.microcore.config.configureadmin"
[20:59:24-887][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.configureadmin/tech.microcore.config.configureadmin.dll"
[20:59:24-903][DEBUG]      |-> init: "tech.microcore.config.configureadmin"
[20:59:24-903][DEBUG]      |-> "tech.microcore.config.configureadmin" : 0
[20:59:24-903][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 2 -> 4
[20:59:24-903][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.configureadmin"
[20:59:24-951][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 2 -> 4
[20:59:24-951][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 1 -> 2
[20:59:24-951][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 1 -> 2
[20:59:24-951][DEBUG]  |-> "tech.microcore.config.dynamiclayoutedit"
[20:59:24-952][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.dynamiclayoutedit/tech.microcore.config.dynamiclayoutedit.dll"
[20:59:24-967][DEBUG]      |-> init: "tech.microcore.config.dynamiclayoutedit"
[20:59:24-967][DEBUG]      |-> "tech.microcore.config.dynamiclayoutedit" : 0
[20:59:24-967][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 1 -> 2
[20:59:24-967][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 1 -> 2
[20:59:24-967][DEBUG]  |-> "tech.microcore.config.general"
[20:59:24-967][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.general/tech.microcore.config.general.dll"
[20:59:24-981][DEBUG]      |-> init: "tech.microcore.config.general"
[20:59:24-981][DEBUG]      |-> "tech.microcore.config.general" : 0
[20:59:24-981][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 1 -> 2
[20:59:24-981][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 1 -> 2
[20:59:24-981][DEBUG]  |-> "tech.microcore.config.optiondialog"
[20:59:24-981][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.optiondialog/tech.microcore.config.optiondialog.dll"
[20:59:25-000][DEBUG]      |-> init: "tech.microcore.config.optiondialog"
[20:59:25-001][DEBUG]      |-> "tech.microcore.config.optiondialog" : 0
[20:59:25-001][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 2 -> 4
[20:59:25-001][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.optiondialog"
[20:59:25-006][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.configureadmin/extension.xml"
[20:59:25-006][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.dynamiclayoutedit/extension.xml"
[20:59:25-007][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.general/extension.xml"
[20:59:25-012][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 2 -> 4
[20:59:25-012][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 2 -> 4
[20:59:25-012][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.general"
[20:59:25-012][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.configureadmin" ] QHash()
[20:59:25-018][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.configureadmin"
[20:59:25-022][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.general" ] QHash(("zh_CN", QHash(("Startup", "启动配置"))))
[20:59:25-024][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.dynamiclayoutedit" ] QHash(("zh_CN", QHash(("layoutEdit", "布局")))("en_US", QHash(("layoutEdit", "LayoutEdit"))))
[20:59:25-028][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-033][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 2 -> 4
[20:59:25-033][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 1 -> 2
[20:59:25-033][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 1 -> 2
[20:59:25-034][DEBUG]  |-> "tech.microcore.config.pluginmanager"
[20:59:25-034][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.pluginmanager/tech.microcore.config.pluginmanager.dll"
[20:59:25-053][DEBUG]      |-> init: "tech.microcore.config.pluginmanager"
[20:59:25-053][DEBUG]      |-> "tech.microcore.config.pluginmanager" : 0
[20:59:25-053][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 1 -> 2
[20:59:25-053][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 1 -> 2
[20:59:25-053][DEBUG]  |-> "tech.microcore.config.scenemanager"
[20:59:25-054][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.scenemanager/tech.microcore.config.scenemanager.dll"
[20:59:25-069][DEBUG]      |-> init: "tech.microcore.config.scenemanager"
[20:59:25-069][DEBUG]      |-> "tech.microcore.config.scenemanager" : 0
[20:59:25-069][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 2 -> 4
[20:59:25-069][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.scenemanager"
[20:59:25-073][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.general"
[20:59:25-082][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Startup", "启动配置"))))
[20:59:25-082][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.dynamiclayoutedit"
[20:59:25-093][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("layoutEdit", "布局")))("en_US", QHash(("layoutEdit", "LayoutEdit"))))
[20:59:25-094][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.optiondialog/extension.xml"
[20:59:25-094][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.pluginmanager/extension.xml"
[20:59:25-098][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 2 -> 4
[20:59:25-098][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 1 -> 2
[20:59:25-098][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 1 -> 2
[20:59:25-098][DEBUG]  |-> "tech.microcore.config.shortcutmanager"
[20:59:25-099][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.shortcutmanager/tech.microcore.config.shortcutmanager.dll"
[20:59:25-105][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.optiondialog" ] QHash(("zh_CN", QHash(("Options", "选项")("Environment", "环境"))))
[20:59:25-107][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.pluginmanager" ] QHash(("zh_CN", QHash(("Plugin Manager", "插件管理器")))("en_US", QHash(("Plugin Manager", "Plugin Manager"))))
[20:59:25-116][DEBUG]      |-> init: "tech.microcore.config.shortcutmanager"
[20:59:25-116][DEBUG]      |-> "tech.microcore.config.shortcutmanager" : 0
[20:59:25-117][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 2 -> 4
[20:59:25-117][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.shortcutmanager"
[20:59:25-121][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.optiondialog"
[20:59:25-121][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.scenemanager/extension.xml"
[20:59:25-130][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.scenemanager" ] QHash(("zh_CN", QHash(("Scene Manager", "场景管理器"))))
[20:59:25-135][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Options", "选项")("Environment", "环境"))))
[20:59:25-135][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.pluginmanager"
[20:59:25-147][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Plugin Manager", "插件管理器")))("en_US", QHash(("Plugin Manager", "Plugin Manager"))))
[20:59:25-150][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 2 -> 4
[20:59:25-151][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 1 -> 2
[20:59:25-151][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 1 -> 2
[20:59:25-151][DEBUG]  |-> "tech.microcore.demo.audiorecorder"
[20:59:25-151][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.audiorecorder/tech.microcore.demo.audiorecorder.dll"
[20:59:25-221][DEBUG]      |-> init: "tech.microcore.demo.audiorecorder"
[20:59:25-221][DEBUG]      |-> "tech.microcore.demo.audiorecorder" : 0
[20:59:25-222][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 1 -> 2
[20:59:25-222][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 1 -> 2
[20:59:25-222][DEBUG]  |-> "tech.microcore.demo.clock"
[20:59:25-222][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.clock/tech.microcore.demo.clock.dll"
[20:59:25-236][DEBUG]      |-> init: "tech.microcore.demo.clock"
[20:59:25-237][DEBUG]      |-> "tech.microcore.demo.clock" : 0
[20:59:25-237][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 1 -> 2
[20:59:25-237][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 1 -> 2
[20:59:25-237][DEBUG]  |-> "tech.microcore.demo.demoproperty"
[20:59:25-237][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demoproperty/tech.microcore.demo.demoproperty.dll"
[20:59:25-277][DEBUG]      |-> init: "tech.microcore.demo.demoproperty"
[20:59:25-277][DEBUG]      |-> "tech.microcore.demo.demoproperty" : 0
[20:59:25-277][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 1 -> 2
[20:59:25-277][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 1 -> 2
[20:59:25-277][DEBUG]  |-> "tech.microcore.demo.demoservice"
[20:59:25-278][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demoservice/tech.microcore.demo.demoservice.dll"
[20:59:25-294][DEBUG]      |-> init: "tech.microcore.demo.demoservice"
[20:59:25-294][DEBUG]      |-> "tech.microcore.demo.demoservice" : 0
[20:59:25-294][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 2 -> 4
[20:59:25-294][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demoservice"
[20:59:25-298][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.scenemanager"
[20:59:25-307][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Scene Manager", "场景管理器"))))
[20:59:25-308][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.config.shortcutmanager/extension.xml"
[20:59:25-308][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.audiorecorder/extension.xml"
[20:59:25-308][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.clock/extension.xml"
[20:59:25-309][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demoproperty/extension.xml"
[20:59:25-314][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 2 -> 4
[20:59:25-314][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 1 -> 2
[20:59:25-314][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 1 -> 2
[20:59:25-314][DEBUG]  |-> "tech.microcore.demo.demowindow"
[20:59:25-314][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demowindow/tech.microcore.demo.demowindow.dll"
[20:59:25-316][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.demoproperty" ] QHash()
[20:59:25-321][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.clock" ] QHash(("zh_CN", QHash(("clock", "钟表"))))
[20:59:25-322][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.config.shortcutmanager" ] QHash(("zh_CN", QHash(("Key Sequence", "快捷键"))))
[20:59:25-325][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.audiorecorder" ] QHash(("zh_CN", QHash(("Audiorecorder", "录音"))))
[20:59:25-344][DEBUG]      |-> init: "tech.microcore.demo.demowindow"
[20:59:25-344][DEBUG]      |-> "tech.microcore.demo.demowindow" : 0
[20:59:25-344][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 1 -> 2
[20:59:25-344][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 1 -> 2
[20:59:25-344][DEBUG]  |-> "tech.microcore.demo.dragdroprobot"
[20:59:25-344][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.dragdroprobot/tech.microcore.demo.dragdroprobot.dll"
[20:59:25-359][DEBUG]      |-> init: "tech.microcore.demo.dragdroprobot"
[20:59:25-359][DEBUG]      |-> "tech.microcore.demo.dragdroprobot" : 0
[20:59:25-359][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 1 -> 2
[20:59:25-359][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 1 -> 2
[20:59:25-359][DEBUG]  |-> "tech.microcore.demo.extsetdemo"
[20:59:25-359][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.extsetdemo/tech.microcore.demo.extsetdemo.dll"
[20:59:25-374][DEBUG]      |-> init: "tech.microcore.demo.extsetdemo"
[20:59:25-374][DEBUG]      |-> "tech.microcore.demo.extsetdemo" : 0
[20:59:25-375][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 2 -> 4
[20:59:25-375][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.extsetdemo"
[20:59:25-379][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.demoproperty"
[20:59:25-379][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demoservice/extension.xml"
[20:59:25-385][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.demoservice" ] QHash()
[20:59:25-388][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-388][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.clock"
[20:59:25-403][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("clock", "钟表"))))
[20:59:25-403][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.config.shortcutmanager"
[20:59:25-412][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Key Sequence", "快捷键"))))
[20:59:25-412][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.audiorecorder"
[20:59:25-422][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Audiorecorder", "录音"))))
[20:59:25-423][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.demowindow/extension.xml"
[20:59:25-423][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.dragdroprobot/extension.xml"
[20:59:25-431][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 2 -> 4
[20:59:25-431][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 2 -> 4
[20:59:25-431][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.audiorecorder"
[20:59:25-434][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.demowindow" ] QHash()
[20:59:25-436][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.demoservice"
[20:59:25-437][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.dragdroprobot" ] QHash(("zh_CN", QHash(("Robot", "机器人"))))
[20:59:25-448][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-448][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.demowindow"
[20:59:25-458][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-462][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 2 -> 4
[20:59:25-462][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 1 -> 2
[20:59:25-462][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 1 -> 2
[20:59:25-463][DEBUG]  |-> "tech.microcore.demo.hellochina"
[20:59:25-463][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.hellochina/tech.microcore.demo.hellochina.dll"
[20:59:25-482][DEBUG]      |-> init: "tech.microcore.demo.hellochina"
[20:59:25-482][DEBUG]      |-> "tech.microcore.demo.hellochina" : 0
[20:59:25-482][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 1 -> 2
[20:59:25-482][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 1 -> 2
[20:59:25-483][DEBUG]  |-> "tech.microcore.demo.helloworld"
[20:59:25-483][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.helloworld/tech.microcore.demo.helloworld.dll"
[20:59:25-503][DEBUG]      |-> init: "tech.microcore.demo.helloworld"
[20:59:25-503][DEBUG]      |-> "tech.microcore.demo.helloworld" : 0
[20:59:25-503][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 2 -> 4
[20:59:25-503][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.helloworld"
[20:59:25-508][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.dragdroprobot"
[20:59:25-519][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Robot", "机器人"))))
[20:59:25-519][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.extsetdemo/extension.xml"
[20:59:25-520][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.hellochina/extension.xml"
[20:59:25-524][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 2 -> 4
[20:59:25-524][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 2 -> 4
[20:59:25-524][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.hellochina"
[20:59:25-525][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.hellochina" ] QHash()
[20:59:25-526][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.extsetdemo" ] QHash()
[20:59:25-529][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.hellochina"
[20:59:25-540][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-540][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.extsetdemo"
[20:59:25-549][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-554][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 2 -> 4
[20:59:25-554][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 1 -> 2
[20:59:25-554][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 1 -> 2
[20:59:25-554][DEBUG]  |-> "tech.microcore.demo.qtwindow"
[20:59:25-554][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.qtwindow/tech.microcore.demo.qtwindow.dll"
[20:59:25-568][DEBUG]      |-> init: "tech.microcore.demo.qtwindow"
[20:59:25-568][DEBUG]      |-> "tech.microcore.demo.qtwindow" : 0
[20:59:25-568][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 1 -> 2
[20:59:25-568][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 1 -> 2
[20:59:25-568][DEBUG]  |-> "tech.microcore.demo.settingdemo"
[20:59:25-568][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.settingdemo/tech.microcore.demo.settingdemo.dll"
[20:59:25-589][DEBUG]      |-> init: "tech.microcore.demo.settingdemo"
[20:59:25-589][DEBUG]      |-> "tech.microcore.demo.settingdemo" : 0
[20:59:25-589][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 2 -> 4
[20:59:25-589][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.settingdemo"
[20:59:25-594][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.helloworld/extension.xml"
[20:59:25-594][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.qtwindow/extension.xml"
[20:59:25-598][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 2 -> 4
[20:59:25-598][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 1 -> 2
[20:59:25-598][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 1 -> 2
[20:59:25-599][DEBUG]  |-> "tech.microcore.demo.textedit"
[20:59:25-599][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.textedit/tech.microcore.demo.textedit.dll"
[20:59:25-604][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.qtwindow" ] QHash(("zh_CN", QHash(("Window", "窗口"))))
[20:59:25-605][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.helloworld" ] QHash()
[20:59:25-639][DEBUG]      |-> init: "tech.microcore.demo.textedit"
[20:59:25-639][DEBUG]      |-> "tech.microcore.demo.textedit" : 0
[20:59:25-639][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 1 -> 2
[20:59:25-639][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 1 -> 2
[20:59:25-639][DEBUG]  |-> "tech.microcore.demo.widget"
[20:59:25-639][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.widget/tech.microcore.demo.widget.dll"
[20:59:25-652][DEBUG]      |-> init: "tech.microcore.demo.widget"
[20:59:25-652][DEBUG]      |-> "tech.microcore.demo.widget" : 0
[20:59:25-652][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 1 -> 2
[20:59:25-653][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 1 -> 2
[20:59:25-653][DEBUG]  |-> "tech.microcore.dstyle.coverwidget"
[20:59:25-653][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.coverwidget/tech.microcore.dstyle.coverwidget.dll"
[20:59:25-669][DEBUG]      |-> init: "tech.microcore.dstyle.coverwidget"
[20:59:25-669][DEBUG]      |-> "tech.microcore.dstyle.coverwidget" : 0
[20:59:25-669][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 1 -> 2
[20:59:25-669][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 1 -> 2
[20:59:25-669][DEBUG]  |-> "tech.microcore.dstyle.scrollwidget"
[20:59:25-669][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.scrollwidget/tech.microcore.dstyle.scrollwidget.dll"
[20:59:25-683][DEBUG]      |-> init: "tech.microcore.dstyle.scrollwidget"
[20:59:25-683][DEBUG]      |-> "tech.microcore.dstyle.scrollwidget" : 0
[20:59:25-684][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 1 -> 2
[20:59:25-684][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 1 -> 2
[20:59:25-684][DEBUG]  |-> "tech.microcore.dstyle.tabwidget"
[20:59:25-684][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.tabwidget/tech.microcore.dstyle.tabwidget.dll"
[20:59:25-702][DEBUG]      |-> init: "tech.microcore.dstyle.tabwidget"
[20:59:25-702][DEBUG]      |-> "tech.microcore.dstyle.tabwidget" : 0
[20:59:25-702][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 1 -> 2
[20:59:25-702][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 1 -> 2
[20:59:25-702][DEBUG]  |-> "tech.microcore.dstyle.toolboxwidget"
[20:59:25-702][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.toolboxwidget/tech.microcore.dstyle.toolboxwidget.dll"
[20:59:25-718][DEBUG]      |-> init: "tech.microcore.dstyle.toolboxwidget"
[20:59:25-718][DEBUG]      |-> "tech.microcore.dstyle.toolboxwidget" : 0
[20:59:25-718][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 1 -> 2
[20:59:25-718][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 1 -> 2
[20:59:25-718][DEBUG]  |-> "tech.microcore.mainwin.core"
[20:59:25-718][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.mainwin.core/tech.microcore.mainwin.core.dll"
[20:59:25-736][DEBUG]      |-> init: "tech.microcore.mainwin.core"
[20:59:25-736][DEBUG]      |-> "tech.microcore.mainwin.core" : 0
[20:59:25-736][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 1 -> 2
[20:59:25-736][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 1 -> 2
[20:59:25-737][DEBUG]  |-> "tech.microcore.mainwin.desktop"
[20:59:25-737][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.mainwin.desktop/tech.microcore.mainwin.desktop.dll"
[20:59:25-757][DEBUG]      |-> init: "tech.microcore.mainwin.desktop"
[20:59:25-758][DEBUG]      |-> "tech.microcore.mainwin.desktop" : 0
[20:59:25-758][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 1 -> 2
[20:59:25-758][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 1 -> 2
[20:59:25-758][DEBUG]  |-> "tech.microcore.service.dynamiclayout"
[20:59:25-758][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.dynamiclayout/tech.microcore.service.dynamiclayout.dll"
[20:59:25-776][DEBUG]      |-> init: "tech.microcore.service.dynamiclayout"
[20:59:25-776][DEBUG]      |-> "tech.microcore.service.dynamiclayout" : 0
[20:59:25-776][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 2 -> 4
[20:59:25-776][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.dynamiclayout"
[20:59:25-781][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.qtwindow"
[20:59:25-781][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.settingdemo/extension.xml"
[20:59:25-791][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.settingdemo" ] QHash()
[20:59:25-792][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Window", "窗口"))))
[20:59:25-792][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.helloworld"
[20:59:25-804][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-804][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.textedit/extension.xml"
[20:59:25-804][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.demo.widget/extension.xml"
[20:59:25-805][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.coverwidget/extension.xml"
[20:59:25-805][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.scrollwidget/extension.xml"
[20:59:25-812][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 2 -> 4
[20:59:25-812][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 2 -> 4
[20:59:25-812][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.clock"
[20:59:25-816][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.widget" ] QHash(("zh_CN", QHash(("Demo", "示例"))))
[20:59:25-816][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.tabwidget/extension.xml"
[20:59:25-818][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.settingdemo"
[20:59:25-821][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.demo.textedit" ] QHash(("zh_CN", QHash(("Save", "保存")("Bold", "加粗")("Open", "打开")("Print", "打印")("Copy", "复制")("Italic", "斜体")("Font Style", "样式")("Left", "左对齐")("Justify", "两端对齐")("Right", "右对齐")("TextEdit", "文本编辑")("Color", "颜色")("Font Size", "字号")("comboFont", "字体")("Export PDF", "导出PDF")("Center", "居中")("edit", "编辑")("Pdf", "PDF")("Cut", "剪贴")("Paste", "粘贴")("New", "新建")("Underline", "下划线"))))
[20:59:25-821][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.dstyle.toolboxwidget/extension.xml"
[20:59:25-830][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.dstyle.scrollwidget" ] QHash(("zh_CN", QHash(("StaticWidget Style", "定时分页视图"))))
[20:59:25-830][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.mainwin.core/extension.xml"
[20:59:25-830][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-830][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.widget"
[20:59:25-834][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.dstyle.tabwidget" ] QHash(("zh_CN", QHash(("Tab Style", "分页样式"))))
[20:59:25-834][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.mainwin.desktop/extension.xml"
[20:59:25-837][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.dstyle.coverwidget" ] QHash(("zh_CN", QHash(("CoverWidget Style", "滑动浏览视图"))))
[20:59:25-840][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.dstyle.toolboxwidget" ] QHash(("zh_CN", QHash(("Toolbox Style", "分栏样式"))))
[20:59:25-841][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Demo", "示例"))))
[20:59:25-844][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.mainwin.core" ] QHash()
[20:59:25-846][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 2 -> 4
[20:59:25-847][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 2 -> 4
[20:59:25-847][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.dynamiclayoutedit"
[20:59:25-852][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.demo.textedit"
[20:59:25-853][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.mainwin.desktop" ] QHash(("zh_CN", QHash(("About Us", "关于我们")("Save", "保存")("Edit", "编辑")("FilestatusTip", "文件状态栏提示")("ToolstatusTip", "工具状态栏提示")("View", "视图")("ViewtoolTip", "视图工具栏提示")("Help", "帮助")("Tool", "工具")("AboutstatusTip", "关于状态栏提示")("EditstatusTip", "编辑状态栏提示")("Helps", "帮助")("Opened Window", "打开的窗口")("About", "关于")("File", "文件")("Pic", "图片")("about menu", "关于 菜单")("Dock View", "停靠视图")("Others", "其他")("ProgressBar", "进程栏")("EdittoolTip", "编辑工具栏提示")("about", "关于")("AbouttoolTip", "关于工具栏提示")("ViewstatusTip", "视图状态栏提示")("=Exit", "=退出")("TooltoolTip", "工具工具栏提示")("Exit", "退出")("About Qt", "关于Qt")("Desktop Main Window", "桌面主窗口")("FiletoolTip", "文件工具栏提示"))))
[20:59:25-862][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Save", "保存")("Bold", "加粗")("Open", "打开")("Print", "打印")("Copy", "复制")("Italic", "斜体")("Font Style", "样式")("Left", "左对齐")("Justify", "两端对齐")("Right", "右对齐")("TextEdit", "文本编辑")("Color", "颜色")("Font Size", "字号")("comboFont", "字体")("Export PDF", "导出PDF")("Center", "居中")("edit", "编辑")("Pdf", "PDF")("Cut", "剪贴")("Paste", "粘贴")("New", "新建")("Underline", "下划线"))))
[20:59:25-862][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.dstyle.scrollwidget"
[20:59:25-872][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("StaticWidget Style", "定时分页视图"))))
[20:59:25-872][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.dstyle.tabwidget"
[20:59:25-881][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Tab Style", "分页样式"))))
[20:59:25-881][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.dstyle.coverwidget"
[20:59:25-889][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("CoverWidget Style", "滑动浏览视图"))))
[20:59:25-889][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.dstyle.toolboxwidget"
[20:59:25-898][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Toolbox Style", "分栏样式"))))
[20:59:25-898][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.mainwin.core"
[20:59:25-908][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash()
[20:59:25-912][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 2 -> 4
[20:59:25-912][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 1 -> 2
[20:59:25-912][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 1 -> 2
[20:59:25-912][DEBUG]  |-> "tech.microcore.service.eventadmin"
[20:59:25-912][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.eventadmin/tech.microcore.service.eventadmin.dll"
[20:59:25-927][DEBUG]      |-> init: "tech.microcore.service.eventadmin"
[20:59:25-927][DEBUG]      |-> "tech.microcore.service.eventadmin" : 0
[20:59:25-927][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 2 -> 4
[20:59:25-927][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.eventadmin"
[20:59:25-931][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.mainwin.desktop"
[20:59:25-939][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("About Us", "关于我们")("Save", "保存")("Edit", "编辑")("FilestatusTip", "文件状态栏提示")("ToolstatusTip", "工具状态栏提示")("View", "视图")("ViewtoolTip", "视图工具栏提示")("Help", "帮助")("Tool", "工具")("AboutstatusTip", "关于状态栏提示")("EditstatusTip", "编辑状态栏提示")("Helps", "帮助")("Opened Window", "打开的窗口")("About", "关于")("File", "文件")("Pic", "图片")("about menu", "关于 菜单")("Dock View", "停靠视图")("Others", "其他")("ProgressBar", "进程栏")("EdittoolTip", "编辑工具栏提示")("about", "关于")("AbouttoolTip", "关于工具栏提示")("ViewstatusTip", "视图状态栏提示")("=Exit", "=退出")("TooltoolTip", "工具工具栏提示")("Exit", "退出")("About Qt", "关于Qt")("Desktop Main Window", "桌面主窗口")("FiletoolTip", "文件工具栏提示"))))
[20:59:25-939][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.dynamiclayout/extension.xml"
[20:59:25-944][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 2 -> 4
[20:59:25-944][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 2 -> 4
[20:59:25-944][DEBUG] [ "Resolved  " ]	 "tech.microcore.mainwin.core"
[20:59:25-951][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.service.dynamiclayout" ] QHash(("zh_CN", QHash(("LayoutEdit", "布局编辑")("layout edit", "布局编辑"))))
[20:59:25-953][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 2 -> 4
[20:59:25-953][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 2 -> 4
[20:59:25-953][DEBUG] [ "Resolved  " ]	 "tech.microcore.mainwin.desktop"
[20:59:25-957][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.service.dynamiclayout"
[20:59:25-972][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("LayoutEdit", "布局编辑")("layout edit", "布局编辑"))))
[20:59:25-975][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 2 -> 4
[20:59:25-976][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 2 -> 4
[20:59:25-976][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.toolboxwidget"
[20:59:25-985][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 2 -> 4
[20:59:25-985][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 2 -> 4
[20:59:25-985][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.tabwidget"
[20:59:25-995][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 2 -> 4
[20:59:25-995][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 2 -> 4
[20:59:25-995][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.scrollwidget"
[20:59:26-004][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 2 -> 4
[20:59:26-004][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 2 -> 4
[20:59:26-004][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.coverwidget"
[20:59:26-013][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 2 -> 4
[20:59:26-013][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 2 -> 4
[20:59:26-013][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.widget"
[20:59:26-022][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 2 -> 4
[20:59:26-022][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 2 -> 4
[20:59:26-022][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.qtwindow"
[20:59:26-032][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 2 -> 4
[20:59:26-032][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 2 -> 4
[20:59:26-032][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.dragdroprobot"
[20:59:26-042][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 2 -> 4
[20:59:26-043][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 2 -> 4
[20:59:26-043][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demowindow"
[20:59:26-051][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 2 -> 4
[20:59:26-051][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 2 -> 4
[20:59:26-051][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demoproperty"
[20:59:26-060][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 2 -> 4
[20:59:26-060][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 2 -> 4
[20:59:26-060][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.pluginmanager"
[20:59:26-069][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 2 -> 4
[20:59:26-069][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 1 -> 2
[20:59:26-069][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 1 -> 2
[20:59:26-069][DEBUG]  |-> "tech.microcore.service.propertybrowser"
[20:59:26-069][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.propertybrowser/tech.microcore.service.propertybrowser.dll"
[20:59:26-086][DEBUG]      |-> init: "tech.microcore.service.propertybrowser"
[20:59:26-086][DEBUG]      |-> "tech.microcore.service.propertybrowser" : 0
[20:59:26-086][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 2 -> 4
[20:59:26-086][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.propertybrowser"
[20:59:26-095][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 2 -> 4
[20:59:26-095][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 1 -> 2
[20:59:26-095][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 1 -> 2
[20:59:26-095][DEBUG]  |-> "tech.microcore.service.undomanager"
[20:59:26-095][DEBUG]    |-> "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.undomanager/tech.microcore.service.undomanager.dll"
[20:59:26-111][DEBUG]      |-> init: "tech.microcore.service.undomanager"
[20:59:26-111][DEBUG]      |-> "tech.microcore.service.undomanager" : 0
[20:59:26-111][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 2 -> 4
[20:59:26-111][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.undomanager"
[20:59:26-115][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.propertybrowser/extension.xml"
[20:59:26-120][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 2 -> 4
[20:59:26-120][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 2 -> 4
[20:59:26-120][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.textedit"
[20:59:26-125][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.service.propertybrowser" ] QHash(("zh_CN", QHash(("property", "属性"))))
[20:59:26-128][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 2 -> 4
[20:59:26-128][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 1 -> 2
[20:59:26-128][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 1 -> 2
[20:59:26-128][DEBUG] START: ("tech.microcore.config.configureadmin", "tech.microcore.config.optiondialog", "tech.microcore.config.general", "tech.microcore.config.scenemanager", "tech.microcore.config.shortcutmanager", "tech.microcore.demo.demoservice", "tech.microcore.demo.extsetdemo", "tech.microcore.demo.audiorecorder", "tech.microcore.demo.helloworld", "tech.microcore.demo.hellochina", "tech.microcore.demo.settingdemo", "tech.microcore.service.dynamiclayout", "tech.microcore.demo.clock", "tech.microcore.config.dynamiclayoutedit", "tech.microcore.service.eventadmin", "tech.microcore.mainwin.core", "tech.microcore.mainwin.desktop", "tech.microcore.dstyle.toolboxwidget", "tech.microcore.dstyle.tabwidget", "tech.microcore.dstyle.scrollwidget", "tech.microcore.dstyle.coverwidget", "tech.microcore.demo.widget", "tech.microcore.demo.qtwindow", "tech.microcore.demo.dragdroprobot", "tech.microcore.demo.demowindow", "tech.microcore.demo.demoproperty", "tech.microcore.config.pluginmanager", "tech.microcore.service.propertybrowser", "tech.microcore.service.undomanager", "tech.microcore.demo.textedit")
[20:59:26-128][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 4 -> 8
[20:59:26-128][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 4 -> 8
[20:59:26-138][DEBUG] register configuration service success
[20:59:26-138][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 8 -> 32
[20:59:26-138][DEBUG] [ "Actived   " ]	 "tech.microcore.config.configureadmin"
[20:59:26-143][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.service.propertybrowser"
[20:59:26-154][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("property", "属性"))))
[20:59:26-154][DEBUG] void ExtensionSystem::Internal::ExtensionFileParseTask::parseExtensionFile(ExtensionSystem::ExtType::Plugin&) > "D:/work/testtool/tool/res/QxPlugin/plugins/tech.microcore.service.undomanager/extension.xml"
[20:59:26-159][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 8 -> 32
[20:59:26-160][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 4 -> 8
[20:59:26-160][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 4 -> 8
[20:59:26-165][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 8 -> 32
[20:59:26-165][DEBUG] [ "Actived   " ]	 "tech.microcore.config.optiondialog"
[20:59:26-167][DEBUG] virtual void ExtensionSystem::Internal::ExtensionFileParseTask::run() [ "tech.microcore.service.undomanager" ] QHash(("zh_CN", QHash(("Undo", "撤销")("Redo", "恢复")("UndoManager", "撤销管理"))))
[20:59:26-170][DEBUG] [DB] > writeExtensionPlugin: "tech.microcore.service.undomanager"
[20:59:26-179][DEBUG] void ExtensionSystem::Internal::ExtensionPointAdmin::dispatchExtensionData(const ExtensionSystem::ExtType::Plugin&) > true : QHash(("zh_CN", QHash(("Undo", "撤销")("Redo", "恢复")("UndoManager", "撤销管理"))))
[20:59:26-184][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 8 -> 32
[20:59:26-185][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 4 -> 8
[20:59:26-185][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 4 -> 8
[20:59:26-190][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 8 -> 32
[20:59:26-190][DEBUG] [ "Actived   " ]	 "tech.microcore.config.general"
[20:59:26-200][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 8 -> 32
[20:59:26-200][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 4 -> 8
[20:59:26-200][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 4 -> 8
[20:59:26-210][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 8 -> 32
[20:59:26-211][DEBUG] [ "Actived   " ]	 "tech.microcore.config.scenemanager"
[20:59:26-219][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 8 -> 32
[20:59:26-219][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 4 -> 8
[20:59:26-220][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 4 -> 8
[20:59:26-224][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 8 -> 32
[20:59:26-224][DEBUG] [ "Actived   " ]	 "tech.microcore.config.shortcutmanager"
[20:59:26-232][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 8 -> 32
[20:59:26-233][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 4 -> 8
[20:59:26-233][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 4 -> 8
[20:59:26-233][DEBUG] register demo service success
[20:59:26-233][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 8 -> 32
[20:59:26-233][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.demoservice"
[20:59:26-241][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 8 -> 32
[20:59:26-242][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 4 -> 8
[20:59:26-242][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 4 -> 8
[20:59:26-242][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 8 -> 32
[20:59:26-242][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.extsetdemo"
[20:59:26-252][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 8 -> 32
[20:59:26-252][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 4 -> 8
[20:59:26-252][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 4 -> 8
[20:59:26-256][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 8 -> 32
[20:59:26-256][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.audiorecorder"
[20:59:26-265][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 8 -> 32
[20:59:26-265][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 4 -> 8
[20:59:26-265][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 4 -> 8
[20:59:26-266][DEBUG] [EVENT] > Service: 1
[20:59:26-266][DEBUG] [EVENT] > Extension: 1
[20:59:26-266][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.demo.helloworld.ext.ExePoint1" 
	> ()
[20:59:26-266][DEBUG] [EVENT] > Extension: 1
[20:59:26-267][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.demo.helloworld.ext.ExePoint2" 
	> ()
[20:59:26-267][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 8 -> 32
[20:59:26-267][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.helloworld" = 32
[20:59:26-267][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.helloworld"
[20:59:26-276][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 8 -> 32
[20:59:26-276][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 4 -> 8
[20:59:26-276][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.hellochina" = 8
[20:59:26-277][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 4 -> 8
[20:59:26-277][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 8 -> 32
[20:59:26-277][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.hellochina" = 32
[20:59:26-277][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.hellochina"
[20:59:26-285][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 8 -> 32
[20:59:26-285][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 4 -> 8
[20:59:26-285][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.settingdemo" = 8
[20:59:26-285][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 4 -> 8
[20:59:26-286][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 8 -> 32
[20:59:26-286][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.settingdemo" = 32
[20:59:26-286][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.settingdemo"
[20:59:26-294][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 8 -> 32
[20:59:26-294][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 4 -> 8
[20:59:26-294][DEBUG] [EVENT] > Plugin: "tech.microcore.service.dynamiclayout" = 8
[20:59:26-294][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 4 -> 8
[20:59:26-295][DEBUG] [EVENT] > Extension: 1
[20:59:26-296][DEBUG] ## "tech.microcore.dstyle.scrollwidget" : QHash(("StaticWidget Style", "定时分页视图"))
[20:59:26-296][DEBUG] 	> "tr('StaticWidget Style')" :	 "StaticWidget Style" 	 "定时分页视图"
[20:59:26-296][DEBUG] ## "tech.microcore.dstyle.tabwidget" : QHash(("Tab Style", "分页样式"))
[20:59:26-296][DEBUG] 	> "tr('Tab Style')" :	 "Tab Style" 	 "分页样式"
[20:59:26-296][DEBUG] ## "tech.microcore.dstyle.coverwidget" : QHash(("CoverWidget Style", "滑动浏览视图"))
[20:59:26-296][DEBUG] 	> "tr('CoverWidget Style')" :	 "CoverWidget Style" 	 "滑动浏览视图"
[20:59:26-296][DEBUG] ## "tech.microcore.dstyle.toolboxwidget" : QHash(("Toolbox Style", "分栏样式"))
[20:59:26-296][DEBUG] 	> "tr('Toolbox Style')" :	 "Toolbox Style" 	 "分栏样式"
[20:59:26-296][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.dynamiclayout.style" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout.style\" plugin=\"tech.microcore.dstyle.scrollwidget\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<StyleWidget title=\"定时分页视图\" id=\"tech.microcore.dstyle.scrollwidget.dynamicLayout.UI\">\n<Meta>\n<String key=\"title\" value=\"StaticWidget Style\"/>\n<Int key=\"timeout\" value=\"3\"/>\n</Meta>\n</StyleWidget>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout.style\" plugin=\"tech.microcore.dstyle.tabwidget\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<StyleWidget title=\"分页样式\" id=\"tech.microcore.dstyle.tabwidget.dynamicLayout.UI\" isFactory=\"true\">\n<Meta>\n<bool key=\"show\" value=\"false\"/>\n<Int value=\"2\"/>\n</Meta>\n</StyleWidget>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout.style\" plugin=\"tech.microcore.dstyle.coverwidget\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<StyleWidget title=\"滑动浏览视图\" id=\"tech.microcore.dstyle.coverwidget.dynamicLayout.UI\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout.style\" plugin=\"tech.microcore.dstyle.toolboxwidget\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<StyleWidget title=\"分栏样式\" id=\"tech.microcore.dstyle.toolboxwidget.dynamicLayout.UI\">\n<Meta>\n<Bool key=\"show\" value=\"true\"/>\n<Int key=\"timeout\" value=\"10\"/>\n</Meta>\n</StyleWidget>\n</ExtData>\n")
[20:59:26-296][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-298][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-300][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-301][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-304][DEBUG] [EVENT] > Extension: 1
[20:59:26-304][DEBUG] ## "tech.microcore.demo.clock" : QHash(("clock", "钟表"))
[20:59:26-304][DEBUG] 	> "tr('clock')" :	 "clock" 	 "钟表"
[20:59:26-304][DEBUG] ## "tech.microcore.demo.qtwindow" : QHash(("Window", "窗口"))
[20:59:26-304][DEBUG] 	> "tr('Window')" :	 "Window" 	 "窗口"
[20:59:26-304][DEBUG] ## "tech.microcore.demo.widget" : QHash(("Demo", "示例"))
[20:59:26-304][DEBUG] 	> "tr('Demo')" :	 "Demo" 	 "示例"
[20:59:26-304][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.dynamiclayout" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout\" plugin=\"tech.microcore.demo.clock\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<DynamicLayout title=\"钟表\" id=\"tech.microcore.demo.clock.dock.UI\" icon=\"images/command.png\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout\" plugin=\"tech.microcore.demo.qtwindow\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<DynamicLayout title=\"窗口\" id=\"tech.microcore.demo.qtwindow.UI\" index=\"8\" isFloating=\"false\" isFactory=\"true\" defareas=\"2\" visible=\"true\" allowedAreas=\"15\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dynamiclayout\" plugin=\"tech.microcore.demo.widget\" extPlugin=\"tech.microcore.service.dynamiclayout\">\n<DynamicLayout sceneName=\"\" title=\"示例\" id=\"tech.microcore.demo.widget.UI\" index=\"4\" isFloating=\"false\" icon=\"\" defareas=\"2\" visible=\"true\" allowedAreas=\"2\"/>\n</ExtData>\n")
[20:59:26-304][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-322][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-324][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-327][DEBUG] [EVENT] > Service: 1
[20:59:26-327][DEBUG] register dynamiclayout service success
[20:59:26-327][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 8 -> 32
[20:59:26-327][DEBUG] [EVENT] > Plugin: "tech.microcore.service.dynamiclayout" = 32
[20:59:26-327][DEBUG] [ "Actived   " ]	 "tech.microcore.service.dynamiclayout"
[20:59:26-335][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 8 -> 32
[20:59:26-335][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 4 -> 8
[20:59:26-335][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.clock" = 8
[20:59:26-335][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 4 -> 8
[20:59:26-339][DEBUG] ClockActivator::start
[20:59:26-339][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 8 -> 32
[20:59:26-339][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.clock" = 32
[20:59:26-339][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.clock"
[20:59:26-347][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 8 -> 32
[20:59:26-347][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 4 -> 8
[20:59:26-347][DEBUG] [EVENT] > Plugin: "tech.microcore.config.dynamiclayoutedit" = 8
[20:59:26-347][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 4 -> 8
[20:59:26-347][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 8 -> 32
[20:59:26-347][DEBUG] [EVENT] > Plugin: "tech.microcore.config.dynamiclayoutedit" = 32
[20:59:26-347][DEBUG] [ "Actived   " ]	 "tech.microcore.config.dynamiclayoutedit"
[20:59:26-355][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 8 -> 32
[20:59:26-355][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 4 -> 8
[20:59:26-355][DEBUG] [EVENT] > Plugin: "tech.microcore.service.eventadmin" = 8
[20:59:26-356][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 4 -> 8
[20:59:26-356][DEBUG] [EVENT] > Service: 1
[20:59:26-356][DEBUG] [INFO] EventAdmin: register event admin service success
[20:59:26-356][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 8 -> 32
[20:59:26-356][DEBUG] [EVENT] > Plugin: "tech.microcore.service.eventadmin" = 32
[20:59:26-356][DEBUG] [ "Actived   " ]	 "tech.microcore.service.eventadmin"
[20:59:26-364][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 8 -> 32
[20:59:26-364][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 4 -> 8
[20:59:26-364][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.core" = 8
[20:59:26-364][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 4 -> 8
[20:59:26-365][DEBUG] [EVENT] > Extension: 1
[20:59:26-365][DEBUG] ## "tech.microcore.demo.demoproperty" : QHash()
[20:59:26-365][DEBUG] 	> "tr('Demoproperty')" :	 "Demoproperty" 	 ""
[20:59:26-365][DEBUG] ## "tech.microcore.demo.demowindow" : QHash()
[20:59:26-365][DEBUG] 	> "tr('Demo')" :	 "Demo" 	 ""
[20:59:26-365][DEBUG] ## "tech.microcore.service.dynamiclayout" : QHash(("LayoutEdit", "布局编辑")("layout edit", "布局编辑"))
[20:59:26-366][DEBUG] 	> "tr('ContentTree')" :	 "ContentTree" 	 ""
[20:59:26-366][DEBUG] ## "tech.microcore.service.propertybrowser" : QHash(("property", "属性"))
[20:59:26-366][DEBUG] 	> "tr('property')" :	 "property" 	 "属性"
[20:59:26-366][DEBUG] ## "tech.microcore.service.undomanager" : QHash(("Undo", "撤销")("Redo", "恢复")("UndoManager", "撤销管理"))
[20:59:26-366][DEBUG] 	> "tr('UndoManager')" :	 "UndoManager" 	 "撤销管理"
[20:59:26-366][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.dockview" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.dockview\" plugin=\"tech.microcore.demo.demoproperty\" extPlugin=\"tech.microcore.mainwin.core\">\n<Dockview title=\"Demoproperty\" id=\"tech.microcore.demo.demoproperty.demo\" isFloating=\"false\" defareas=\"2\" visible=\"true\" allowedAreas=\"15\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dockview\" plugin=\"tech.microcore.demo.demowindow\" extPlugin=\"tech.microcore.mainwin.core\">\n<Dockview title=\"Demo\" id=\"tech.microcore.demo.demowindow.dockShow\" index=\"4\" isFloating=\"false\" defareas=\"0\" visible=\"true\" allowedAreas=\"15\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dockview\" isFloating=\"false\" plugin=\"tech.microcore.service.dynamiclayout\" DefAreas=\"2\" visible=\"true\" extPlugin=\"tech.microcore.mainwin.core\" allowedAreas=\"15\">\n<dockview title=\"ContentTree\" id=\"tech.microcore.service.dynamiclayout.contenttree\" isFloating=\"false\" DefAreas=\"Left\" visible=\"true\" allowedAreas=\"15\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dockview\" plugin=\"tech.microcore.service.propertybrowser\" extPlugin=\"tech.microcore.mainwin.core\">\n<Dockview sceneName=\"\" title=\"属性\" id=\"tech.microcore.service.propertybrowser.property\" isFloating=\"false\" toolTip=\"属性\" icon=\"images/property.png\" defareas=\"1\" visible=\"true\" allowedAreas=\"2,4\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.dockview\" plugin=\"tech.microcore.service.undomanager\" extPlugin=\"tech.microcore.mainwin.core\">\n<Dockview sceneName=\"SCENE_V\" title=\"撤销管理\" id=\"tech.microcore.service.undomanager.UndoView.UI\" index=\"5\" isFloating=\"false\" toolTip=\"撤销管理\" icon=\"resources/file.png\" defareas=\"2\" visible=\"true\" allowedAreas=\"15\"/>\n</ExtData>\n")
[20:59:26-366][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-366][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-366][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-366][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-366][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-366][DEBUG] [EVENT] > Extension: 1
[20:59:26-367][DEBUG] ## "tech.microcore.config.dynamiclayoutedit" : QHash(("layoutEdit", "布局"))
[20:59:26-367][DEBUG] 	> "tr('layoutEdit')" :	 "layoutEdit" 	 "布局"
[20:59:26-367][DEBUG] ## "tech.microcore.demo.demowindow" : QHash()
[20:59:26-367][DEBUG] 	> "tr('Demo')" :	 "Demo" 	 ""
[20:59:26-367][DEBUG] ## "tech.microcore.demo.dragdroprobot" : QHash(("Robot", "机器人"))
[20:59:26-367][DEBUG] 	> "tr('Robot')" :	 "Robot" 	 "机器人"
[20:59:26-367][DEBUG] ## "tech.microcore.demo.textedit" : QHash(("Save", "保存")("Bold", "加粗")("Open", "打开")("Print", "打印")("Copy", "复制")("Italic", "斜体")("Font Style", "样式")("Left", "左对齐")("Justify", "两端对齐")("Right", "右对齐")("TextEdit", "文本编辑")("Color", "颜色")("Font Size", "字号")("comboFont", "字体")("Export PDF", "导出PDF")("Center", "居中")("edit", "编辑")("Pdf", "PDF")("Cut", "剪贴")("Paste", "粘贴")("New", "新建")("Underline", "下划线"))
[20:59:26-368][DEBUG] 	> "tr('edit')" :	 "edit" 	 "编辑"
[20:59:26-368][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.Centralview" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.Centralview\" plugin=\"tech.microcore.config.dynamiclayoutedit\" extPlugin=\"tech.microcore.mainwin.core\">\n<Centralview activated=\"true\" sceneName=\"SCENE_EYE\" title=\"布局\" id=\"tech.microcore.config.dynamiclayoutedit.UI\" index=\"3\" icon=\"resources/editcopy.png\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.Centralview\" plugin=\"tech.microcore.demo.demowindow\" extPlugin=\"tech.microcore.mainwin.core\">\n<Centralview activated=\"true\" sceneName=\"SCENE_DEMO\" title=\"Demo\" id=\"tech.microcore.demo.demowindow.centralviewShow\" index=\"9\" icon=\"\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.Centralview\" plugin=\"tech.microcore.demo.dragdroprobot\" extPlugin=\"tech.microcore.mainwin.core\">\n<Centralview activated=\"true\" sceneName=\"SCENE_ROT\" title=\"机器人\" id=\"tech.microcore.demo.dragdroprobot.robot.UI\" index=\"3\" icon=\"\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.Centralview\" plugin=\"tech.microcore.demo.textedit\" extPlugin=\"tech.microcore.mainwin.core\">\n<Centralview activated=\"true\" sceneName=\"SCENE_V\" title=\"编辑\" index=\"3\" id=\"tech.microcore.demo.textedit.edit.UI\" icon=\"New.png\" factory=\"true\"/>\n</ExtData>\n")
[20:59:26-368][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-368][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-368][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-368][DEBUG] [EVENT] > Extension: 1
[20:59:26-369][DEBUG] ## "tech.microcore.mainwin.desktop" : QHash(("About Us", "关于我们")("Save", "保存")("Edit", "编辑")("FilestatusTip", "文件状态栏提示")("ToolstatusTip", "工具状态栏提示")("View", "视图")("ViewtoolTip", "视图工具栏提示")("Help", "帮助")("EditstatusTip", "编辑状态栏提示")("Tool", "工具")("AboutstatusTip", "关于状态栏提示")("Helps", "帮助")("Opened Window", "打开的窗口")("About", "关于")("File", "文件")("Pic", "图片")("about menu", "关于 菜单")("Dock View", "停靠视图")("Others", "其他")("ProgressBar", "进程栏")("EdittoolTip", "编辑工具栏提示")("about", "关于")("AbouttoolTip", "关于工具栏提示")("ViewstatusTip", "视图状态栏提示")("=Exit", "=退出")("TooltoolTip", "工具工具栏提示")("Exit", "退出")("About Qt", "关于Qt")("Desktop Main Window", "桌面主窗口")("FiletoolTip", "文件工具栏提示"))
[20:59:26-369][DEBUG] 	> "tr('Edit')" :	 "Edit" 	 "编辑"
[20:59:26-369][DEBUG] 	> "tr('Exit')" :	 "Exit" 	 "退出"
[20:59:26-369][DEBUG] 	> "tr('Exit123')" :	 "Exit123" 	 ""
[20:59:26-369][DEBUG] 	> "tr('Helps')" :	 "Helps" 	 "帮助"
[20:59:26-369][DEBUG] 	> "tr('Helpsssssssss')" :	 "Helpsssssssss" 	 ""
[20:59:26-369][DEBUG] 	> "tr('Others')" :	 "Others" 	 "其他"
[20:59:26-369][DEBUG] 	> "tr('Pic')" :	 "Pic" 	 "图片"
[20:59:26-369][DEBUG] 	> "tr('ProgressBar')" :	 "ProgressBar" 	 "进程栏"
[20:59:26-369][DEBUG] 	> "tr('Save')" :	 "Save" 	 "保存"
[20:59:26-369][DEBUG] 	> "tr('slider11')" :	 "slider11" 	 ""
[20:59:26-369][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.statusbar" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.statusbar\" plugin=\"tech.microcore.mainwin.desktop\" extPlugin=\"tech.microcore.mainwin.core\">\n<Menu sceneMode=\"visible\" permanent=\"false\" sceneName=\"SCENE_ROT\" title=\"Helpsssssssss\" id=\"tech.microcore.mainwin.desktop.Helpsvsddvgfsvgdsdvsv\" index=\"2\" toolTip=\"helps\" enabled=\"true\" visible=\"true\">\n<Menu title=\"Print\" id=\"tech.microcore.mainwin.desktop. PrintEC\" enabled=\"true\">\n<Action text=\"编辑\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.EditEC\" autoRepeat=\"false\" toolTip=\"编辑\" statusTip=\"编辑\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n<Group text=\"Files\" id=\"tech.microcore.mainwin.desktop.Files\">\n<Action text=\"保存\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.SaveEC\" autoRepeat=\"false\" toolTip=\"保存\" statusTip=\"保存\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n<Action text=\"图片\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.PicAc\" autoRepeat=\"false\" toolTip=\"图片\" statusTip=\"图片\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n</Group>\n<Group text=\"Other\" id=\"tech.microcore.mainwin.desktop.toolButton.groupOther\">\n<Action text=\"Others\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.OthersEC\" autoRepeat=\"false\" toolTip=\"其他\" statusTip=\"其他\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n</Group>\n</Menu>\n<Action text=\"编辑\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.EditEC\" autoRepeat=\"false\" toolTip=\"编辑\" statusTip=\"编辑\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n<Group text=\"Help\" id=\"tech.microcore.mainwin.desktop.groupHelpvvv\">\n<Action text=\"帮助\" checkable=\"true\" id=\"tech.microcore.mainwin.desktop.HelpECvsdv\" autoRepeat=\"false\" toolTip=\"帮助\" statusTip=\"帮助\" enabled=\"true\" checked=\"true\" iconSize=\"24x24\" visible=\"true\"/>\n</Group>\n</Menu>\n<Action sceneMode=\"visible\" permanent=\"true\" text=\"退出\" sceneName=\"SCENE_V\" id=\"tech.microcore.mainwin.desktop.ExitKLUJLU\" index=\"2\" toolTip=\"Exit123\" icon=\"resources/logo_min.png\" enabled=\"true\" shortcut=\"\" visible=\"GREGGGGGGGGG\"/>\n<ProgressBar sceneMode=\"visible\" text=\"进程栏\" permanent=\"false\" sceneName=\"SCENE_V\" id=\"tech.microcore.mainwin.desktop.progressbar\" index=\"5\" enabled=\"true\" visible=\"true\" value=\"20\"/>\n<Slider sceneMode=\"visible\" text=\"slider11\" permanent=\"true\" sceneName=\"SCENE_V\" maximum=\"100\" id=\"tech.microcore.mainwin.desktop.slider1\" index=\"1\" enabled=\"true\" minimum=\"0\" visible=\"true\" value=\"1\"/>\n<LineEdit text=\"hellosss\" sceneMode=\"visible\" permanent=\"false\" sceneName=\"SCENE_V\" id=\"tech.microcore.mainwin.desktop.lineedit\" index=\"3\" label=\"hello\" readOnly=\"false\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n")
[20:59:26-369][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-369][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-369][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-369][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-369][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-370][DEBUG] [EVENT] > Extension: 1
[20:59:26-371][DEBUG] ## "tech.microcore.mainwin.desktop" : QHash(("About Us", "关于我们")("Save", "保存")("Edit", "编辑")("FilestatusTip", "文件状态栏提示")("ToolstatusTip", "工具状态栏提示")("View", "视图")("ViewtoolTip", "视图工具栏提示")("Help", "帮助")("EditstatusTip", "编辑状态栏提示")("Tool", "工具")("AboutstatusTip", "关于状态栏提示")("Helps", "帮助")("Opened Window", "打开的窗口")("About", "关于")("File", "文件")("Pic", "图片")("about menu", "关于 菜单")("Dock View", "停靠视图")("Others", "其他")("ProgressBar", "进程栏")("EdittoolTip", "编辑工具栏提示")("about", "关于")("AbouttoolTip", "关于工具栏提示")("ViewstatusTip", "视图状态栏提示")("=Exit", "=退出")("TooltoolTip", "工具工具栏提示")("Exit", "退出")("About Qt", "关于Qt")("Desktop Main Window", "桌面主窗口")("FiletoolTip", "文件工具栏提示"))
[20:59:26-371][DEBUG] 	> "tr('Desktop Main Window')" :	 "Desktop Main Window" 	 "桌面主窗口"
[20:59:26-371][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.layout" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.layout\" plugin=\"tech.microcore.mainwin.desktop\" extPlugin=\"tech.microcore.mainwin.core\">\n<Layout title=\"桌面主窗口\" id=\"tech.microcore.mainwin.core.layout.desktop\" toolTip=\"Desktop Main Window\" size=\"1000,800\" icon=\"resources/file.png\" showMode=\"8\"/>\n</ExtData>\n")
[20:59:26-371][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-371][DEBUG] [EVENT] > Extension: 1
[20:59:26-372][DEBUG] ## "tech.microcore.config.optiondialog" : QHash(("Options", "选项")("Environment", "环境"))
[20:59:26-372][DEBUG] 	> "tr('Options')" :	 "Options" 	 "选项"
[20:59:26-372][DEBUG] ## "tech.microcore.config.pluginmanager" : QHash(("Plugin Manager", "插件管理器"))
[20:59:26-372][DEBUG] 	> "tr('Plugin Manager')" :	 "Plugin Manager" 	 "插件管理器"
[20:59:26-372][DEBUG] ## "tech.microcore.demo.demoservice" : QHash()
[20:59:26-372][DEBUG] 	> "tr('DemoService')" :	 "DemoService" 	 ""
[20:59:26-372][DEBUG] ## "tech.microcore.demo.demowindow" : QHash()
[20:59:26-372][DEBUG] 	> "tr('Demo')" :	 "Demo" 	 ""
[20:59:26-372][DEBUG] 	> "tr('DemoAction')" :	 "DemoAction" 	 ""
[20:59:26-372][DEBUG] ## "tech.microcore.demo.extsetdemo" : QHash()
[20:59:26-372][DEBUG] 	> "tr('Demo')" :	 "Demo" 	 ""
[20:59:26-372][DEBUG] ## "tech.microcore.demo.textedit" : QHash(("Save", "保存")("Bold", "加粗")("Open", "打开")("Print", "打印")("Copy", "复制")("Italic", "斜体")("Font Style", "样式")("Left", "左对齐")("Justify", "两端对齐")("Right", "右对齐")("TextEdit", "文本编辑")("Color", "颜色")("Font Size", "字号")("comboFont", "字体")("Export PDF", "导出PDF")("Center", "居中")("edit", "编辑")("Pdf", "PDF")("Cut", "剪贴")("Paste", "粘贴")("New", "新建")("Underline", "下划线"))
[20:59:26-372][DEBUG] 	> "tr('Bold')" :	 "Bold" 	 "加粗"
[20:59:26-372][DEBUG] 	> "tr('Center')" :	 "Center" 	 "居中"
[20:59:26-372][DEBUG] 	> "tr('Color')" :	 "Color" 	 "颜色"
[20:59:26-372][DEBUG] 	> "tr('Copy')" :	 "Copy" 	 "复制"
[20:59:26-372][DEBUG] 	> "tr('Cut')" :	 "Cut" 	 "剪贴"
[20:59:26-373][DEBUG] 	> "tr('Export PDF')" :	 "Export PDF" 	 "导出PDF"
[20:59:26-373][DEBUG] 	> "tr('Find')" :	 "Find" 	 ""
[20:59:26-373][DEBUG] 	> "tr('Font Size')" :	 "Font Size" 	 "字号"
[20:59:26-373][DEBUG] 	> "tr('Font Style')" :	 "Font Style" 	 "样式"
[20:59:26-373][DEBUG] 	> "tr('Italic')" :	 "Italic" 	 "斜体"
[20:59:26-373][DEBUG] 	> "tr('Justify')" :	 "Justify" 	 "两端对齐"
[20:59:26-373][DEBUG] 	> "tr('Left')" :	 "Left" 	 "左对齐"
[20:59:26-373][DEBUG] 	> "tr('New')" :	 "New" 	 "新建"
[20:59:26-373][DEBUG] 	> "tr('Open')" :	 "Open" 	 "打开"
[20:59:26-373][DEBUG] 	> "tr('Paste')" :	 "Paste" 	 "粘贴"
[20:59:26-373][DEBUG] 	> "tr('Pdf')" :	 "Pdf" 	 "PDF"
[20:59:26-373][DEBUG] 	> "tr('Print')" :	 "Print" 	 "打印"
[20:59:26-373][DEBUG] 	> "tr('Right')" :	 "Right" 	 "右对齐"
[20:59:26-373][DEBUG] 	> "tr('Save')" :	 "Save" 	 "保存"
[20:59:26-373][DEBUG] 	> "tr('TextEdit')" :	 "TextEdit" 	 "文本编辑"
[20:59:26-373][DEBUG] 	> "tr('Underline')" :	 "Underline" 	 "下划线"
[20:59:26-373][DEBUG] 	> "tr('comboFont')" :	 "comboFont" 	 "字体"
[20:59:26-373][DEBUG] ## "tech.microcore.mainwin.desktop" : QHash(("About Us", "关于我们")("Save", "保存")("Edit", "编辑")("FilestatusTip", "文件状态栏提示")("ToolstatusTip", "工具状态栏提示")("View", "视图")("ViewtoolTip", "视图工具栏提示")("Help", "帮助")("EditstatusTip", "编辑状态栏提示")("Tool", "工具")("AboutstatusTip", "关于状态栏提示")("Helps", "帮助")("Opened Window", "打开的窗口")("About", "关于")("File", "文件")("Pic", "图片")("about menu", "关于 菜单")("Dock View", "停靠视图")("Others", "其他")("ProgressBar", "进程栏")("EdittoolTip", "编辑工具栏提示")("about", "关于")("AbouttoolTip", "关于工具栏提示")("ViewstatusTip", "视图状态栏提示")("=Exit", "=退出")("TooltoolTip", "工具工具栏提示")("Exit", "退出")("About Qt", "关于Qt")("Desktop Main Window", "桌面主窗口")("FiletoolTip", "文件工具栏提示"))
[20:59:26-373][DEBUG] 	> "tr('=Exit')" :	 "=Exit" 	 "=退出"
[20:59:26-373][DEBUG] 	> "tr('About Qt')" :	 "About Qt" 	 "关于Qt"
[20:59:26-373][DEBUG] 	> "tr('About Us')" :	 "About Us" 	 "关于我们"
[20:59:26-373][DEBUG] 	> "tr('About')" :	 "About" 	 "关于"
[20:59:26-373][DEBUG] 	> "tr('AboutstatusTip')" :	 "AboutstatusTip" 	 "关于状态栏提示"
[20:59:26-373][DEBUG] 	> "tr('AbouttoolTip')" :	 "AbouttoolTip" 	 "关于工具栏提示"
[20:59:26-373][DEBUG] 	> "tr('Dock View')" :	 "Dock View" 	 "停靠视图"
[20:59:26-373][DEBUG] 	> "tr('Edit')" :	 "Edit" 	 "编辑"
[20:59:26-373][DEBUG] 	> "tr('EditstatusTip')" :	 "EditstatusTip" 	 "编辑状态栏提示"
[20:59:26-373][DEBUG] 	> "tr('EdittoolTip')" :	 "EdittoolTip" 	 "编辑工具栏提示"
[20:59:26-373][DEBUG] 	> "tr('Exit')" :	 "Exit" 	 "退出"
[20:59:26-374][DEBUG] 	> "tr('File')" :	 "File" 	 "文件"
[20:59:26-374][DEBUG] 	> "tr('FilestatusTip')" :	 "FilestatusTip" 	 "文件状态栏提示"
[20:59:26-374][DEBUG] 	> "tr('FiletoolTip')" :	 "FiletoolTip" 	 "文件工具栏提示"
[20:59:26-374][DEBUG] 	> "tr('Help')" :	 "Help" 	 "帮助"
[20:59:26-374][DEBUG] 	> "tr('Opened Window')" :	 "Opened Window" 	 "打开的窗口"
[20:59:26-374][DEBUG] 	> "tr('Tool')" :	 "Tool" 	 "工具"
[20:59:26-374][DEBUG] 	> "tr('ToolstatusTip')" :	 "ToolstatusTip" 	 "工具状态栏提示"
[20:59:26-374][DEBUG] 	> "tr('TooltoolTip')" :	 "TooltoolTip" 	 "工具工具栏提示"
[20:59:26-374][DEBUG] 	> "tr('View')" :	 "View" 	 "视图"
[20:59:26-374][DEBUG] 	> "tr('ViewstatusTip')" :	 "ViewstatusTip" 	 "视图状态栏提示"
[20:59:26-374][DEBUG] 	> "tr('ViewtoolTip')" :	 "ViewtoolTip" 	 "视图工具栏提示"
[20:59:26-374][DEBUG] 	> "tr('about menu')" :	 "about menu" 	 "关于 菜单"
[20:59:26-374][DEBUG] 	> "tr('about')" :	 "about" 	 "关于"
[20:59:26-374][DEBUG] ## "tech.microcore.service.dynamiclayout" : QHash(("LayoutEdit", "布局编辑")("layout edit", "布局编辑"))
[20:59:26-374][DEBUG] 	> "tr('LayoutEdit')" :	 "LayoutEdit" 	 "布局编辑"
[20:59:26-374][DEBUG] 	> "tr('layout edit')" :	 "layout edit" 	 "布局编辑"
[20:59:26-374][DEBUG] ## "tech.microcore.service.undomanager" : QHash(("Undo", "撤销")("Redo", "恢复")("UndoManager", "撤销管理"))
[20:59:26-374][DEBUG] 	> "tr('Redo')" :	 "Redo" 	 "恢复"
[20:59:26-374][DEBUG] 	> "tr('Undo')" :	 "Undo" 	 "撤销"
[20:59:26-374][DEBUG] ExtensionPointPrivate::updateExtensionText > "tech.microcore.mainwin.core.control" 
	> ("<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.config.optiondialog\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<Action id=\"tech.microcore.config.optiondialog.show\" parent=\"tech.microcore.mainwin.desktop.actionid.ToolMenuBar\"/>\n</Format>\n<Action text=\"选项\" sceneMode=\"true\" sceneName=\"\" checkable=\"false\" id=\"tech.microcore.config.optiondialog.show\" autoRepeat=\"false\" toolTip=\"选项\" checked=\"false\" icon=\"images/logo_min.png\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.config.pluginmanager\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<Action id=\"tech.microcore.pluginmanager.action.ShowPluginManagerDialog\" index=\"1\" parent=\"tech.microcore.mainwin.desktop.actionid.ToolMenuBar\"/>\n</Format>\n<Action text=\"插件管理器\" sceneName=\"\" checkable=\"false\" id=\"tech.microcore.pluginmanager.action.ShowPluginManagerDialog\" autoRepeat=\"false\" toolTip=\"plugin manager\" statusTip=\"plugin manager\" icon=\"images/puzzle.png\" enabled=\"true\" checked=\"false\" iconSize=\"\" shortcut=\"\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.demo.demoservice\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.desktop\">\n<Action id=\"tech.microcore.demo.demoservice.edit\" parent=\"tech.microcore.mainwin.desktop.toolbarPic\"/>\n</Format>\n<Action text=\"DemoService\" sceneMode=\"true\" checkable=\"true\" id=\"tech.microcore.demo.demoservice.edit\" autoRepeat=\"false\" toolTip=\"DemoService\" icon=\"\" checked=\"false\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.demo.demowindow\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<MenuBar>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"Demo\" index=\"9\" id=\"tech.microcore.demo.demowindow.controlShow\" toolTip=\"Demo\" statusTip=\"Demo\" enabled=\"true\" visible=\"cnscnsbcfsd\">\n<Action sceneMode=\"visible\" text=\"DemoAction\" checkable=\"false\" id=\"tech.microcore.demo.demowindow.ExportPdfActionHanler\" autoRepeat=\"false\" enabled=\"true\" checked=\"false\" icon=\"resources/logo_min.png\" shortcut=\"ctrl+D\" visible=\"true\"/>\n</Menu>\n</MenuBar>\n</Format>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.demo.extsetdemo\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<Action id=\"tech.microcore.demo.extsetdemo.show\" parent=\"tech.microcore.mainwin.desktop.actionid.ToolMenuBar\"/>\n</Format>\n<Action text=\"Demo\" sceneMode=\"true\" sceneName=\"\" checkable=\"false\" id=\"tech.microcore.demo.extsetdemo.show\" autoRepeat=\"false\" toolTip=\"Demo\" checked=\"false\" icon=\"\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.demo.textedit\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<MenuBar>\n<Menu id=\"tech.microcore.mainwin.desktop.actionid.MenuBarFile\">\n<Action id=\"tech.microcore.demo.textedit.ExportPdfActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.NewActionHanler\" index=\"100\"/>\n<Action id=\"tech.microcore.demo.textedit.OpenActionHanler\" index=\"50\"/>\n<Action id=\"tech.microcore.demo.textedit.TextEditSaveActionHanler\" index=\"1\"/>\n<Action id=\"tech.microcore.demo.textedit.PrintActionHanler\" index=\"2\"/>\n</Menu>\n<Menu id=\"tech.microcore.mainwin.desktop.actionid.EditMenuBar\" visible=\"true\">\n<Action id=\"tech.microcore.demo.textedit.CopyActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.PasteActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.CutActionHanler\"/>\n<Action id=\"tech.microcore.mainwin.desktop.RevokeActionHanler\"/>\n</Menu>\n</MenuBar>\n<ToolBars>\n<Toolbar text=\"文本编辑\" toolButtonStyle=\"0\" index=\"3\" id=\"tech.microcore.demo.textedit.toolbarFileHandle\">\n<Action id=\"tech.microcore.demo.textedit.NewActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.OpenActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.TextEditSaveActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.PrintActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.ExportPdfActionHanler\"/>\n</Toolbar>\n<Toolbar text=\"文本编辑\" toolButtonStyle=\"0\" index=\"2\" id=\"tech.microcore.demo.textedit.toolbarTextEdit1\">\n<Action id=\"tech.microcore.demo.textedit.CutActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.CopyActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.PasteActionHanler\"/>\n</Toolbar>\n<Toolbar text=\"文本编辑\" toolButtonStyle=\"0\" index=\"1\" id=\"tech.microcore.demo.textedit.toolbarTextEdit2\">\n<Action id=\"tech.microcore.demo.textedit.BoldActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.ItalicActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.UnderlineActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.LeftActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.CenterActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.RightActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.JustifyActionHanler\"/>\n<Action id=\"tech.microcore.demo.textedit.ColorActionHanler\"/>\n</Toolbar>\n<Toolbar text=\"文本编辑\" toolButtonStyle=\"0\" index=\"4\" id=\"tech.microcore.demo.textedit.toolbarTextEdit3\">\n<Widget id=\"tech.microcore.demo.textedit.textStyleActionHanler\"/>\n<Widget id=\"tech.microcore.demo.textedit.textFontActionHanler\"/>\n<Widget id=\"tech.microcore.demo.textedit.textSizeActionHanler\"/>\n</Toolbar>\n</ToolBars>\n</Format>\n<Action sceneMode=\"enabled\" text=\"Find\" sceneName=\"\" id=\"tech.microcore.mainwin.desktop.RevokeActionHanler\" enabled=\"false\" shortcut=\"ctrl+A\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"新建\" checkable=\"false\" id=\"tech.microcore.demo.textedit.NewActionHanler\" autoRepeat=\"false\" toolTip=\"新建\" statusTip=\"新建\" checked=\"false\" enabled=\"true\" icon=\"resources/filenew.png\" iconSize=\"24x24\" shortcut=\"ctrl+O\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"打开\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.OpenActionHanler\" autoRepeat=\"false\" toolTip=\"打开\" statusTip=\"打开\" checked=\"false\" enabled=\"true\" icon=\"resources/fileopen.png\" iconSize=\"24x24\" shortcut=\"ctrl+O\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"保存\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.TextEditSaveActionHanler\" autoRepeat=\"false\" toolTip=\"保存\" statusTip=\"保存\" checked=\"false\" enabled=\"true\" icon=\"resources/filesave.png\" iconSize=\"24x24\" shortcut=\"ctrl+S\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"打印\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.PrintActionHanler\" autoRepeat=\"false\" toolTip=\"打印\" statusTip=\"打印\" checked=\"false\" enabled=\"true\" icon=\"resources/fileprint.png\" iconSize=\"24x24\" shortcut=\"ctrl+P\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"PDF\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.ExportPdfActionHanler\" autoRepeat=\"false\" toolTip=\"导出PDF\" statusTip=\"导出PDF\" checked=\"false\" enabled=\"true\" icon=\"resources/exportpdf.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"剪贴\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.CutActionHanler\" autoRepeat=\"false\" toolTip=\"剪贴\" statusTip=\"剪贴\" checked=\"false\" enabled=\"true\" icon=\"resources/editcut.png\" iconSize=\"32x32\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"复制\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.CopyActionHanler\" autoRepeat=\"false\" toolTip=\"复制\" statusTip=\"复制\" checked=\"false\" enabled=\"true\" icon=\"resources/editcopy.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"粘贴\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.PasteActionHanler\" autoRepeat=\"false\" toolTip=\"粘贴\" statusTip=\"粘贴\" checked=\"false\" enabled=\"true\" icon=\"resources/editpaste.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"加粗\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.BoldActionHanler\" autoRepeat=\"false\" toolTip=\"加粗\" statusTip=\"加粗\" checked=\"false\" enabled=\"true\" icon=\"resources/textbold.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"斜体\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.ItalicActionHanler\" autoRepeat=\"false\" toolTip=\"斜体\" statusTip=\"斜体\" checked=\"false\" enabled=\"true\" icon=\"resources/textitalic.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"下划线\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.UnderlineActionHanler\" autoRepeat=\"false\" toolTip=\"下划线\" statusTip=\"下划线\" checked=\"false\" enabled=\"true\" icon=\"resources/textunder.png\" iconSize=\"32x32\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"左对齐\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.LeftActionHanler\" autoRepeat=\"false\" toolTip=\"左对齐\" statusTip=\"左对齐\" checked=\"false\" enabled=\"true\" icon=\"resources/textleft.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"居中\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.CenterActionHanler\" autoRepeat=\"false\" toolTip=\"居中\" statusTip=\"居中\" checked=\"false\" enabled=\"true\" icon=\"resources/textcenter.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"右对齐\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.RightActionHanler\" autoRepeat=\"false\" toolTip=\"右对齐\" statusTip=\"右对齐\" checked=\"false\" enabled=\"true\" icon=\"resources/textright.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"两端对齐\" sceneName=\"SCENE_V\" checkable=\"true\" id=\"tech.microcore.demo.textedit.JustifyActionHanler\" autoRepeat=\"false\" toolTip=\"两端对齐\" statusTip=\"两端对齐\" checked=\"false\" enabled=\"true\" icon=\"resources/textjustify.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"enabled\" text=\"颜色\" sceneName=\"SCENE_V\" checkable=\"false\" id=\"tech.microcore.demo.textedit.ColorActionHanler\" autoRepeat=\"false\" toolTip=\"颜色\" statusTip=\"颜色\" checked=\"false\" enabled=\"true\" icon=\"resources/color.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Widget sceneMode=\"enabled\" text=\"样式\" sceneName=\"SCENE_V\" id=\"tech.microcore.demo.textedit.textStyleActionHanler\" toolTip=\"样式\" statusTip=\"样式\" enabled=\"true\" visible=\"true\"/>\n<Widget sceneMode=\"enabled\" text=\"字号\" sceneName=\"SCENE_V\" id=\"tech.microcore.demo.textedit.textSizeActionHanler\" toolTip=\"字号\" statusTip=\"字号\" enabled=\"true\" visible=\"true\"/>\n<Widget sceneMode=\"enabled\" text=\"字体\" sceneName=\"SCENE_V\" id=\"tech.microcore.demo.textedit.textFontActionHanler\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.mainwin.desktop\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.core.layout.desktop\">\n<MenuBar>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"文件\" index=\"0\" id=\"tech.microcore.mainwin.desktop.actionid.MenuBarFile\" toolTip=\"文件工具栏提示\" statusTip=\"文件状态栏提示\" icon=\"resources/logo_min.png\" enabled=\"true\" visible=\"true\">\n<Group text=\"groupFile\" id=\"tech.microcore.mainwin.desktop.actionid.OtherGroup\">\n<Action sceneMode=\"visible\" text=\"退出\" id=\"tech.microcore.mainwin.desktop.Exit\" toolTip=\"退出\" statusTip=\"=退出\" enabled=\"true\" icon=\"resources/logo_min.png\" iconSize=\"24x24\" shortcut=\"ctrl+Q\" visible=\"true\"/>\n</Group>\n</Menu>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"编辑\" index=\"1\" id=\"tech.microcore.mainwin.desktop.actionid.EditMenuBar\" toolTip=\"编辑工具栏提示\" statusTip=\"编辑状态栏提示\" enabled=\"true\" visible=\"true\"/>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"视图\" index=\"2\" id=\"tech.microcore.mainwin.desktop.actionid.ViewMenuBar\" toolTip=\"视图工具栏提示\" statusTip=\"视图状态栏提示\" enabled=\"true\" visible=\"true\">\n<Menu title=\"打开的窗口\" index=\"4\" id=\"tech.microcore.mainwin.desktop.actionid.MenuBarView.Centralview\" toolTip=\"打开的窗口\" statusTip=\"打开的窗口\" enabled=\"true\" icon=\"resources/view.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Menu title=\"停靠视图\" index=\"3\" id=\"tech.microcore.mainwin.desktop.actionid.MenuBarView.Dock\" toolTip=\"停靠视图\" statusTip=\"停靠视图\" enabled=\"true\" icon=\"resources/view.png\" iconSize=\"24x24\"/>\n</Menu>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"工具\" index=\"6\" id=\"tech.microcore.mainwin.desktop.actionid.ToolMenuBar\" toolTip=\"工具工具栏提示\" statusTip=\"工具状态栏提示\" enabled=\"true\" visible=\"true\"/>\n<Menu sceneMode=\"visible\" sceneName=\"\" title=\"关于\" index=\"5\" id=\"tech.microcore.mainwin.desktop.actionid.aboutMenuBar\" toolTip=\"关于工具栏提示\" statusTip=\"关于状态栏提示\" enabled=\"true\" visible=\"true\">\n<Action id=\"tech.microcore.mainwin.desktop.AboutQt\"/>\n<Action id=\"tech.microcore.mainwin.desktop.AboutUs\"/>\n<Action id=\"tech.microcore.mainwin.desktop.Help\"/>\n</Menu>\n</MenuBar>\n<ToolBars>\n<Toolbar sceneMode=\"visible\" text=\"关于\" sceneName=\"\" id=\"tech.microcore.mainwin.desktop.toolbarPic\" toolButtonStyle=\"0\" index=\"1\" enabled=\"true\" visible=\"true\">\n<Menu title=\"关于 菜单\" id=\"tech.microcore.mainwin.desktop.actionid.menuAbout\" toolTip=\"关于\" statusTip=\"关于\" defaultActionId=\"tech.microcore.mainwin.desktop.AboutQt\" enabled=\"true\" visible=\"true\">\n<Action id=\"tech.microcore.mainwin.desktop.AboutUs\"/>\n<Action id=\"tech.microcore.mainwin.desktop.AboutQt\"/>\n</Menu>\n<Action id=\"tech.microcore.mainwin.desktop.Help\"/>\n</Toolbar>\n</ToolBars>\n</Format>\n<Action text=\"关于我们\" id=\"tech.microcore.mainwin.desktop.AboutUs\" enabled=\"true\" icon=\"resources/logo_min.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"true\" text=\"关于Qt\" checkable=\"false\" id=\"tech.microcore.mainwin.desktop.AboutQt\" autoRepeat=\"false\" enabled=\"true\" checked=\"false\" icon=\"resources/file.png\" iconSize=\"24x24\" visible=\"true\"/>\n<Action sceneMode=\"visible\" text=\"帮助\" checkable=\"false\" id=\"tech.microcore.mainwin.desktop.Help\" autoRepeat=\"false\" enabled=\"true\" checked=\"true\" icon=\"resources/logo_min.png\" iconSize=\"24x24\" shortcut=\"ctrl+A\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.service.dynamiclayout\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.desktop\">\n<Action id=\"tech.microcore.service.dynamiclayout.edit\" parent=\"tech.microcore.mainwin.desktop.toolbarPic\"/>\n</Format>\n<Action text=\"布局编辑\" sceneMode=\"true\" checkable=\"true\" id=\"tech.microcore.service.dynamiclayout.edit\" autoRepeat=\"false\" toolTip=\"布局编辑\" checked=\"false\" icon=\"images/puzzle.png\" enabled=\"true\" visible=\"true\"/>\n</ExtData>\n", "<ExtData id=\"tech.microcore.mainwin.core.control\" plugin=\"tech.microcore.service.undomanager\" extPlugin=\"tech.microcore.mainwin.core\">\n<Format target=\"tech.microcore.mainwin.desktop\">\n<Action id=\"tech.microcore.service.undomanager.UndoActionHanler\" parent=\"tech.microcore.mainwin.desktop.toolbarPic\"/>\n<Action id=\"tech.microcore.service.undomanager.RedoActionHanler\" parent=\"tech.microcore.mainwin.desktop.toolbarPic\"/>\n</Format>\n<Action text=\"撤销\" sceneMode=\"true\" checkable=\"false\" id=\"tech.microcore.service.undomanager.UndoActionHanler\" autoRepeat=\"false\" toolTip=\"撤销\" statusTip=\"撤销\" icon=\"images/editundo.png\" checked=\"false\" enabled=\"true\" iconSize=\"32x32\" shortcut=\"ctrl+z\" visible=\"true\"/>\n<Action text=\"恢复\" sceneMode=\"true\" checkable=\"false\" id=\"tech.microcore.service.undomanager.RedoActionHanler\" autoRepeat=\"false\" toolTip=\"恢复\" statusTip=\"恢复\" icon=\"images/editredo.png\" checked=\"false\" enabled=\"true\" iconSize=\"32x32\" shortcut=\"ctrl+y\" visible=\"true\"/>\n</ExtData>\n")
[20:59:26-374][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-375][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-376][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-377][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-378][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-379][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-379][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-379][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-379][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-379][DEBUG] [EVENT] > Service: 1
[20:59:26-379][DEBUG] [EVENT] > Service: 1
[20:59:26-379][DEBUG] [EVENT] > Service: 1
[20:59:26-379][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 8 -> 32
[20:59:26-379][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.core" = 32
[20:59:26-379][DEBUG] [ "Actived   " ]	 "tech.microcore.mainwin.core"
[20:59:26-382][DEBUG] element.tag : "ExtPointSet"
[20:59:26-388][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 8 -> 32
[20:59:26-388][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 4 -> 8
[20:59:26-388][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.desktop" = 8
[20:59:26-388][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 4 -> 8
[20:59:26-393][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:26-413][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.ExportPdfActionHanler")
[20:59:26-415][DEBUG] aacc 1 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.TextEditSaveActionHanler")
[20:59:26-421][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.TextEditSaveActionHanler")
[20:59:26-421][DEBUG] aacc 1 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.TextEditSaveActionHanler")
[20:59:26-423][DEBUG] aacc 2 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.PrintActionHanler")
[20:59:26-426][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.PrintActionHanler")
[20:59:26-426][DEBUG] aacc 2 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.PrintActionHanler")
[20:59:26-430][DEBUG] aacc 3 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.OpenActionHanler")
[20:59:26-435][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.OpenActionHanler")
[20:59:26-435][DEBUG] aacc 3 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.OpenActionHanler")
[20:59:26-438][DEBUG] aacc 4 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.NewActionHanler")
[20:59:26-442][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.NewActionHanler")
[20:59:26-442][DEBUG] aacc 4 MenuMock(0x60af0b0, name="tech.microcore.mainwin.desktop.actionid.MenuBarFile") QVariant(QString, "tech.microcore.demo.textedit.NewActionHanler")
[20:59:26-447][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:26-452][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.Exit")
[20:59:26-463][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.CopyActionHanler")
[20:59:26-468][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.PasteActionHanler")
[20:59:26-474][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.CutActionHanler")
[20:59:26-478][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.RevokeActionHanler")
[20:59:26-482][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-484][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-484][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-491][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-496][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:26-498][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.AboutQt")
[20:59:26-504][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.AboutUs")
[20:59:26-509][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.Help")
[20:59:26-516][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.extsetdemo.show")
[20:59:26-518][DEBUG] aacc 1 MenuMock(0x60d6e20, name="tech.microcore.mainwin.desktop.actionid.ToolMenuBar") QVariant(QString, "tech.microcore.pluginmanager.action.ShowPluginManagerDialog")
[20:59:26-520][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:26-523][DEBUG] m_obj QVariant(QString, "tech.microcore.pluginmanager.action.ShowPluginManagerDialog")
[20:59:26-523][DEBUG] aacc 1 MenuMock(0x60d6e20, name="tech.microcore.mainwin.desktop.actionid.ToolMenuBar") QVariant(QString, "tech.microcore.pluginmanager.action.ShowPluginManagerDialog")
[20:59:26-526][WARN] libpng warning: iCCP: known incorrect sRGB profile
[20:59:26-529][DEBUG] m_obj QVariant(QString, "tech.microcore.config.optiondialog.show")
[20:59:26-537][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-539][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.demowindow.ExportPdfActionHanler")
[20:59:26-539][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-539][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.demoservice.edit")
[20:59:26-548][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-555][WARN] setGeometry: Unable to set geometry 85x18+363+124 on QWidgetWindow/'QToolButtonClassWindow'. Resulting geometry:  120x18+363+124 (frame: 8, 31, 8, 8, custom margin: 0, 0, 0, 0, minimum size: 0x0, maximum size: 16777215x16777215).
[20:59:26-578][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-579][DEBUG] m_obj QVariant(QString, "tech.microcore.service.dynamiclayout.edit")
[20:59:26-579][WARN] QPixmap::scaled: Pixmap is a null pixmap
[20:59:26-582][DEBUG] m_obj QVariant(QString, "tech.microcore.service.undomanager.UndoActionHanler")
[20:59:26-588][DEBUG] m_obj QVariant(QString, "tech.microcore.service.undomanager.RedoActionHanler")
[20:59:26-592][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.BoldActionHanler")
[20:59:26-594][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.ItalicActionHanler")
[20:59:26-596][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.UnderlineActionHanler")
[20:59:26-598][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.LeftActionHanler")
[20:59:26-600][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.CenterActionHanler")
[20:59:26-602][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.RightActionHanler")
[20:59:26-605][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.JustifyActionHanler")
[20:59:26-607][DEBUG] m_obj QVariant(QString, "tech.microcore.demo.textedit.ColorActionHanler")
[20:59:26-607][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::start(const QString&) "tech.microcore.demo.textedit"
[20:59:26-607][DEBUG] PluginManager::start > "tech.microcore.demo.textedit" ("tech.microcore.service.undomanager", "tech.microcore.demo.textedit")
[20:59:26-607][DEBUG] PluginManager::Start > "tech.microcore.service.undomanager" : 4
[20:59:26-607][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 4 -> 8
[20:59:26-607][DEBUG] [EVENT] > Plugin: "tech.microcore.service.undomanager" = 8
[20:59:26-607][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 4 -> 8
[20:59:26-608][DEBUG] [EVENT] > Service: 1
[20:59:26-608][DEBUG] [INFO] UndoManager: success
[20:59:26-608][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 8 -> 32
[20:59:26-608][DEBUG] [EVENT] > Plugin: "tech.microcore.service.undomanager" = 32
[20:59:26-608][DEBUG] [ "Actived   " ]	 "tech.microcore.service.undomanager"
[20:59:26-647][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 8 -> 32
[20:59:26-647][DEBUG] PluginManager::Start > "tech.microcore.demo.textedit" : 4
[20:59:26-647][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 4 -> 8
[20:59:26-647][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.textedit" = 8
[20:59:26-647][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 4 -> 8
[20:59:26-650][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 8 -> 32
[20:59:26-650][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.textedit" = 32
[20:59:26-650][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.textedit"
[20:59:26-666][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 8 -> 32
[20:59:26-666][DEBUG] virtual int ExtensionSystem::ExtensionData::active(QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) Request Start Plugin: "tech.microcore.demo.textedit"
[20:59:26-666][WARN] QWidget::setMinimumSize: (tech.microcore.demo.textedit.textStyleActionHanler/WidgetMock) Negative sizes (-1,-1) are not possible
[20:59:26-666][DEBUG] virtual void WidgetMock::attributeChanged(const QString&, const QVariant&) > MAINWINDOW_PLUG_WIDGET: QComboBox(0x6123d60)
[20:59:26-692][WARN] QObject::connect: Cannot connect (null)::activated(int) to TextEditCallbackAdmin::textFamily(int)
[20:59:26-692][WARN] QWidget::setMinimumSize: (tech.microcore.demo.textedit.textFontActionHanler/WidgetMock) Negative sizes (-1,-1) are not possible
[20:59:26-692][DEBUG] virtual void WidgetMock::attributeChanged(const QString&, const QVariant&) > MAINWINDOW_PLUG_WIDGET: QWidget(0x0)
[20:59:26-717][WARN] QWidget::setMinimumSize: (tech.microcore.demo.textedit.textSizeActionHanler/WidgetMock) Negative sizes (-1,-1) are not possible
[20:59:26-717][DEBUG] virtual void WidgetMock::attributeChanged(const QString&, const QVariant&) > MAINWINDOW_PLUG_WIDGET: QComboBox(0x61249a0, name="comboSize")
[20:59:26-727][WARN] setGeometry: Unable to set geometry 91x42+363+124 on QWidgetWindow/'tech.microcore.demo.textedit.textSizeActionHanlerWindow'. Resulting geometry:  120x42+363+124 (frame: 8, 31, 8, 8, custom margin: 0, 0, 0, 0, minimum size: 60x42, maximum size: 16777215x16777215).
[20:59:26-743][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::start(const QString&) "tech.microcore.demo.dragdroprobot"
[20:59:26-743][DEBUG] PluginManager::start > "tech.microcore.demo.dragdroprobot" ("tech.microcore.service.eventadmin", "tech.microcore.mainwin.core", "tech.microcore.demo.dragdroprobot")
[20:59:26-743][DEBUG] PluginManager::Start > "tech.microcore.service.eventadmin" : 32
[20:59:26-743][DEBUG] PluginManager::Start > "tech.microcore.mainwin.core" : 32
[20:59:26-743][DEBUG] PluginManager::Start > "tech.microcore.demo.dragdroprobot" : 4
[20:59:26-744][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 4 -> 8
[20:59:26-744][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.dragdroprobot" = 8
[20:59:26-744][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 4 -> 8
[20:59:26-745][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "PLUG_WIDGET_605FDA42-6763-4982-8AE5-8F712BE9E94F" : QVariant(QVariantList, (QVariant(QWidget*, QWidget(0x611d9a0))))
[20:59:26-747][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-748][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Centralviewtech.microcore.demo.dragdroprobot.robot.UI")
[20:59:26-748][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 8 -> 32
[20:59:26-748][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.dragdroprobot" = 32
[20:59:26-748][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.dragdroprobot"
[20:59:26-777][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 8 -> 32
[20:59:26-778][DEBUG] virtual int ExtensionSystem::ExtensionData::active(QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) Request Start Plugin: "tech.microcore.demo.dragdroprobot"
[20:59:26-779][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "PLUG_WIDGET_605FDA42-6763-4982-8AE5-8F712BE9E94F" : QVariant(QVariantList, (QVariant(QWidget*, WidgetMock(0x60a8de0))))
[20:59:26-792][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "false")
[20:59:26-792][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "false")
[20:59:26-792][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "false")
[20:59:26-792][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "true")
[20:59:26-792][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "focused" : QVariant(QString, "tech.microcore.config.dynamiclayoutedit.UI")
[20:59:26-793][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-793][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Centralviewtech.microcore.config.dynamiclayoutedit.UI")
[20:59:26-793][DEBUG] error,  "No query Unable to fetch row"  file: configiodbimpl.cpp  function: read  line: 207
[20:59:26-793][DEBUG] error,  "插件不存在"  file: configaccessimpl.cpp  function: handleCURDTaskError  line: 797
[20:59:26-793][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::start(const QString&) "tech.microcore.demo.demowindow"
[20:59:26-794][DEBUG] PluginManager::start > "tech.microcore.demo.demowindow" ("tech.microcore.service.eventadmin", "tech.microcore.mainwin.core", "tech.microcore.demo.demowindow")
[20:59:26-794][DEBUG] PluginManager::Start > "tech.microcore.service.eventadmin" : 32
[20:59:26-794][DEBUG] PluginManager::Start > "tech.microcore.mainwin.core" : 32
[20:59:26-794][DEBUG] PluginManager::Start > "tech.microcore.demo.demowindow" : 4
[20:59:26-794][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 4 -> 8
[20:59:26-794][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demowindow" = 8
[20:59:26-794][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 4 -> 8
[20:59:26-794][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "PLUG_WIDGET_605FDA42-6763-4982-8AE5-8F712BE9E94F" : QVariant(QWidget*, DemoWidget(0x601df28))
[20:59:26-798][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "false")
[20:59:26-798][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "sceneChange" : QVariant(QString, "true")
[20:59:26-798][DEBUG] virtual void CentralViewMock::attributeChanged(const QString&, const QVariant&) > "focused" : QVariant(QString, "tech.microcore.demo.demowindow.centralviewShow")
[20:59:26-798][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-798][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Centralviewtech.microcore.demo.demowindow.centralviewShow")
[20:59:26-798][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 8 -> 32
[20:59:26-799][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demowindow" = 32
[20:59:26-799][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.demowindow"
[20:59:26-817][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 8 -> 32
[20:59:26-817][DEBUG] virtual int ExtensionSystem::ExtensionData::active(QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) Request Start Plugin: "tech.microcore.demo.demowindow"
[20:59:26-819][WARN] QStatusBar::insertPermanentWidget: Index out of range (0), appending widget
[20:59:26-823][WARN] QStatusBar::insertPermanentWidget: Index out of range (0), appending widget
[20:59:26-823][WARN] QStatusBar::insertPermanentWidget: Index out of range (0), appending widget
[20:59:26-824][WARN] QStatusBar::insertPermanentWidget: Index out of range (0), appending widget
[20:59:26-824][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.EditEC")
[20:59:26-824][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.SaveEC")
[20:59:26-825][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.PicAc")
[20:59:26-825][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.OthersEC")
[20:59:26-825][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.HelpECvsdv")
[20:59:26-825][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-826][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-826][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-826][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-826][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-826][WARN] QStatusBar::insertWidget: Index out of range (10000), appending widget
[20:59:26-827][DEBUG] [EVENT] > Service: 1
[20:59:26-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::start(const QString&) "tech.microcore.service.propertybrowser"
[20:59:26-830][DEBUG] PluginManager::start > "tech.microcore.service.propertybrowser" ("tech.microcore.service.eventadmin", "tech.microcore.mainwin.core", "tech.microcore.service.propertybrowser")
[20:59:26-830][DEBUG] PluginManager::Start > "tech.microcore.service.eventadmin" : 32
[20:59:26-830][DEBUG] PluginManager::Start > "tech.microcore.mainwin.core" : 32
[20:59:26-830][DEBUG] PluginManager::Start > "tech.microcore.service.propertybrowser" : 4
[20:59:26-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 4 -> 8
[20:59:26-830][DEBUG] [EVENT] > Plugin: "tech.microcore.service.propertybrowser" = 8
[20:59:26-830][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 4 -> 8
[20:59:26-843][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-843][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Docktech.microcore.service.propertybrowser.property")
[20:59:26-843][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 8 -> 32
[20:59:26-843][DEBUG] [EVENT] > Plugin: "tech.microcore.service.propertybrowser" = 32
[20:59:26-843][DEBUG] [ "Actived   " ]	 "tech.microcore.service.propertybrowser"
[20:59:26-863][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 8 -> 32
[20:59:26-864][DEBUG] virtual int ExtensionSystem::ExtensionData::active(QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) Request Start Plugin: "tech.microcore.service.propertybrowser"
[20:59:26-878][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-878][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Docktech.microcore.service.dynamiclayout.contenttree")
[20:59:26-880][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::start(const QString&) "tech.microcore.demo.demoproperty"
[20:59:26-880][DEBUG] PluginManager::start > "tech.microcore.demo.demoproperty" ("tech.microcore.service.eventadmin", "tech.microcore.mainwin.core", "tech.microcore.demo.demoproperty")
[20:59:26-880][DEBUG] PluginManager::Start > "tech.microcore.service.eventadmin" : 32
[20:59:26-880][DEBUG] PluginManager::Start > "tech.microcore.mainwin.core" : 32
[20:59:26-880][DEBUG] PluginManager::Start > "tech.microcore.demo.demoproperty" : 4
[20:59:26-880][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 4 -> 8
[20:59:26-880][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoproperty" = 8
[20:59:26-880][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 4 -> 8
[20:59:26-883][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-883][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Docktech.microcore.demo.demoproperty.demo")
[20:59:26-883][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 8 -> 32
[20:59:26-883][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoproperty" = 32
[20:59:26-883][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.demoproperty"
[20:59:26-904][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 8 -> 32
[20:59:26-904][DEBUG] virtual int ExtensionSystem::ExtensionData::active(QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument, QGenericArgument) Request Start Plugin: "tech.microcore.demo.demoproperty"
[20:59:26-911][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-911][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Docktech.microcore.demo.demowindow.dockShow")
[20:59:26-915][DEBUG] ExtensionSystem::ExtensionData::ExtensionData(ExtensionSystem::Object*) > ""
[20:59:26-915][DEBUG] m_obj QVariant(QString, "tech.microcore.mainwin.desktop.actionid.MenuBarView.Docktech.microcore.service.undomanager.UndoView.UI")
[20:59:26-915][DEBUG] error,  "No query Unable to fetch row"  file: configiodbimpl.cpp  function: read  line: 207
[20:59:26-915][DEBUG] error,  "插件不存在"  file: configaccessimpl.cpp  function: handleCURDTaskError  line: 797
[20:59:26-915][DEBUG] error,  "No query Unable to fetch row"  file: configiodbimpl.cpp  function: read  line: 207
[20:59:26-915][DEBUG] error,  "插件不存在"  file: configaccessimpl.cpp  function: handleCURDTaskError  line: 797
[20:59:26-915][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 8 -> 32
[20:59:26-915][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.desktop" = 32
[20:59:26-915][DEBUG] [ "Actived   " ]	 "tech.microcore.mainwin.desktop"
[20:59:26-928][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 8 -> 32
[20:59:26-929][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 4 -> 8
[20:59:26-929][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.toolboxwidget" = 8
[20:59:26-929][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 4 -> 8
[20:59:26-929][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 8 -> 32
[20:59:26-929][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.toolboxwidget" = 32
[20:59:26-929][DEBUG] [ "Actived   " ]	 "tech.microcore.dstyle.toolboxwidget"
[20:59:26-938][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 8 -> 32
[20:59:26-938][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 4 -> 8
[20:59:26-938][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.tabwidget" = 8
[20:59:26-938][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 4 -> 8
[20:59:26-943][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 8 -> 32
[20:59:26-943][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.tabwidget" = 32
[20:59:26-943][DEBUG] [ "Actived   " ]	 "tech.microcore.dstyle.tabwidget"
[20:59:26-953][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 8 -> 32
[20:59:26-953][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 4 -> 8
[20:59:26-953][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.scrollwidget" = 8
[20:59:26-953][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 4 -> 8
[20:59:26-953][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 8 -> 32
[20:59:26-953][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.scrollwidget" = 32
[20:59:26-953][DEBUG] [ "Actived   " ]	 "tech.microcore.dstyle.scrollwidget"
[20:59:26-970][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 8 -> 32
[20:59:26-970][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 4 -> 8
[20:59:26-970][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.coverwidget" = 8
[20:59:26-970][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 4 -> 8
[20:59:26-970][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 8 -> 32
[20:59:26-970][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.coverwidget" = 32
[20:59:26-970][DEBUG] [ "Actived   " ]	 "tech.microcore.dstyle.coverwidget"
[20:59:26-979][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 8 -> 32
[20:59:26-979][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 4 -> 8
[20:59:26-979][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.widget" = 8
[20:59:26-979][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 4 -> 8
[20:59:26-979][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 8 -> 32
[20:59:26-979][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.widget" = 32
[20:59:26-980][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.widget"
[20:59:26-989][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 8 -> 32
[20:59:26-989][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 4 -> 8
[20:59:26-989][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.qtwindow" = 8
[20:59:26-989][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 4 -> 8
[20:59:26-989][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 8 -> 32
[20:59:26-989][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.qtwindow" = 32
[20:59:26-989][DEBUG] [ "Actived   " ]	 "tech.microcore.demo.qtwindow"
[20:59:26-998][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 8 -> 32
[20:59:26-998][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 4 -> 8
[20:59:26-998][DEBUG] [EVENT] > Plugin: "tech.microcore.config.pluginmanager" = 8
[20:59:26-998][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 4 -> 8
[20:59:27-004][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 8 -> 32
[20:59:27-004][DEBUG] [EVENT] > Plugin: "tech.microcore.config.pluginmanager" = 32
[20:59:27-004][DEBUG] [ "Actived   " ]	 "tech.microcore.config.pluginmanager"
[20:59:27-012][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 8 -> 32
[20:59:27-012][DEBUG] [EVENT] > Framework: 8 to 16
[20:59:28-814][DEBUG] [DockView] 1 Qt::DockWidgetArea(LeftDockWidgetArea)
[20:59:28-814][DEBUG] [DockView] 0 Qt::DockWidgetArea(NoDockWidgetArea)
[20:59:28-815][DEBUG] [DockView] 2 Qt::DockWidgetArea(RightDockWidgetArea)
[20:59:28-815][DEBUG] [DockView] 0 Qt::DockWidgetArea(NoDockWidgetArea)
[20:59:28-815][DEBUG] [DockView] 2 Qt::DockWidgetArea(RightDockWidgetArea)
[20:59:28-827][DEBUG] [EVENT] > Framework: 16 to 4
[20:59:28-827][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 32 -> 16
[20:59:28-827][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.textedit" = 16
[20:59:28-827][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 32 -> 16
[20:59:28-827][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.edit.UI"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.textSizeActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.textFontActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.textStyleActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.ColorActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.JustifyActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.RightActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.CenterActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.LeftActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.UnderlineActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.ItalicActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.BoldActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.PasteActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.CopyActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.CutActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.RedoActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.UndoActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.ExportPdfActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.PrintActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.TextEditSaveActionHanler"
[20:59:28-828][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.OpenActionHanler"
[20:59:28-829][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.textedit.NewActionHanler"
[20:59:28-829][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.textedit" ExtensionSystem::Plugin(0x1848418) - state: 16 -> 4
[20:59:28-829][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.textedit" = 4
[20:59:28-829][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.textedit"
[20:59:28-829][DEBUG] PluginChanged: "tech.microcore.demo.textedit"  - state: 16 -> 4
[20:59:28-829][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 32 -> 16
[20:59:28-829][DEBUG] [EVENT] > Plugin: "tech.microcore.service.undomanager" = 16
[20:59:28-829][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 32 -> 16
[20:59:28-829][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.undomanager.UndoView.UI"
[20:59:28-829][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.undomanager.RedoActionHanler"
[20:59:28-829][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.undomanager.UndoActionHanler"
[20:59:28-829][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.undomanager" ExtensionSystem::Plugin(0x5f369f8) - state: 16 -> 4
[20:59:28-829][DEBUG] [EVENT] > Plugin: "tech.microcore.service.undomanager" = 4
[20:59:28-829][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.undomanager"
[20:59:28-829][DEBUG] PluginChanged: "tech.microcore.service.undomanager"  - state: 16 -> 4
[20:59:28-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 32 -> 16
[20:59:28-830][DEBUG] [EVENT] > Plugin: "tech.microcore.service.propertybrowser" = 16
[20:59:28-830][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 32 -> 16
[20:59:28-830][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.propertybrowser.property"
[20:59:28-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.propertybrowser" ExtensionSystem::Plugin(0x5f36a08) - state: 16 -> 4
[20:59:28-830][DEBUG] [EVENT] > Plugin: "tech.microcore.service.propertybrowser" = 4
[20:59:28-830][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.propertybrowser"
[20:59:28-830][DEBUG] PluginChanged: "tech.microcore.service.propertybrowser"  - state: 16 -> 4
[20:59:28-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 32 -> 16
[20:59:28-830][DEBUG] [EVENT] > Plugin: "tech.microcore.config.pluginmanager" = 16
[20:59:28-830][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 32 -> 16
[20:59:28-830][DEBUG] [ExtensionHandler] > unregister "tech.microcore.pluginmanager.action.ShowPluginManagerDialog"
[20:59:28-830][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.pluginmanager" ExtensionSystem::Plugin(0x18481b8) - state: 16 -> 4
[20:59:28-830][DEBUG] [EVENT] > Plugin: "tech.microcore.config.pluginmanager" = 4
[20:59:28-830][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.pluginmanager"
[20:59:28-831][DEBUG] PluginChanged: "tech.microcore.config.pluginmanager"  - state: 16 -> 4
[20:59:28-831][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 32 -> 16
[20:59:28-831][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoproperty" = 16
[20:59:28-831][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 32 -> 16
[20:59:28-831][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.demoproperty.demo"
[20:59:28-831][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoproperty" ExtensionSystem::Plugin(0x18483b8) - state: 16 -> 4
[20:59:28-831][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoproperty" = 4
[20:59:28-831][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demoproperty"
[20:59:28-835][DEBUG] PluginChanged: "tech.microcore.demo.demoproperty"  - state: 16 -> 4
[20:59:28-835][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 32 -> 16
[20:59:28-835][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demowindow" = 16
[20:59:28-836][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 32 -> 16
[20:59:28-836][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.demowindow.controlShow"
[20:59:28-836][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.demowindow.dockShow"
[20:59:28-836][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.demowindow.centralviewShow"
[20:59:28-836][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demowindow" ExtensionSystem::Plugin(0x1848358) - state: 16 -> 4
[20:59:28-836][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demowindow" = 4
[20:59:28-836][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demowindow"
[20:59:28-837][DEBUG] PluginChanged: "tech.microcore.demo.demowindow"  - state: 16 -> 4
[20:59:28-837][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 32 -> 16
[20:59:28-837][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.dragdroprobot" = 16
[20:59:28-838][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 32 -> 16
[20:59:28-838][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.dragdroprobot.robot.UI"
[20:59:28-839][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.dragdroprobot" ExtensionSystem::Plugin(0x1848328) - state: 16 -> 4
[20:59:28-840][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.dragdroprobot" = 4
[20:59:28-840][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.dragdroprobot"
[20:59:28-840][DEBUG] PluginChanged: "tech.microcore.demo.dragdroprobot"  - state: 16 -> 4
[20:59:28-840][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 32 -> 16
[20:59:28-840][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.qtwindow" = 16
[20:59:28-841][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 32 -> 16
[20:59:28-841][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.qtwindow.UI"
[20:59:28-841][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.qtwindow" ExtensionSystem::Plugin(0x18484f8) - state: 16 -> 4
[20:59:28-841][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.qtwindow" = 4
[20:59:28-841][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.qtwindow"
[20:59:28-841][DEBUG] PluginChanged: "tech.microcore.demo.qtwindow"  - state: 16 -> 4
[20:59:28-841][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 32 -> 16
[20:59:28-841][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.widget" = 16
[20:59:28-841][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 32 -> 16
[20:59:28-841][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.widget.UI"
[20:59:28-841][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.widget" ExtensionSystem::Plugin(0x18483f8) - state: 16 -> 4
[20:59:28-841][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.widget" = 4
[20:59:28-841][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.widget"
[20:59:28-841][DEBUG] PluginChanged: "tech.microcore.demo.widget"  - state: 16 -> 4
[20:59:28-841][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 32 -> 16
[20:59:28-841][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.coverwidget" = 16
[20:59:28-841][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 32 -> 16
[20:59:28-841][DEBUG] [ExtensionHandler] > unregister "tech.microcore.dstyle.coverwidget.dynamicLayout.UI"
[20:59:28-841][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.coverwidget" ExtensionSystem::Plugin(0x1848728) - state: 16 -> 4
[20:59:28-841][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.coverwidget" = 4
[20:59:28-841][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.coverwidget"
[20:59:28-842][DEBUG] PluginChanged: "tech.microcore.dstyle.coverwidget"  - state: 16 -> 4
[20:59:28-842][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 32 -> 16
[20:59:28-842][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.scrollwidget" = 16
[20:59:28-842][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 32 -> 16
[20:59:28-842][DEBUG] [ExtensionHandler] > unregister "tech.microcore.dstyle.scrollwidget.dynamicLayout.UI"
[20:59:28-842][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.scrollwidget" ExtensionSystem::Plugin(0x1848738) - state: 16 -> 4
[20:59:28-842][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.scrollwidget" = 4
[20:59:28-842][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.scrollwidget"
[20:59:28-842][DEBUG] PluginChanged: "tech.microcore.dstyle.scrollwidget"  - state: 16 -> 4
[20:59:28-842][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 32 -> 16
[20:59:28-842][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.tabwidget" = 16
[20:59:28-842][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 32 -> 16
[20:59:28-842][DEBUG] [ExtensionHandler] > unregister "tech.microcore.dstyle.tabwidget.dynamicLayout.UI"
[20:59:28-842][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.tabwidget" ExtensionSystem::Plugin(0x1848658) - state: 16 -> 4
[20:59:28-842][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.tabwidget" = 4
[20:59:28-842][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.tabwidget"
[20:59:28-843][DEBUG] PluginChanged: "tech.microcore.dstyle.tabwidget"  - state: 16 -> 4
[20:59:28-843][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 32 -> 16
[20:59:28-843][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.toolboxwidget" = 16
[20:59:28-843][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 32 -> 16
[20:59:28-843][DEBUG] [ExtensionHandler] > unregister "tech.microcore.dstyle.toolboxwidget.dynamicLayout.UI"
[20:59:28-843][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.dstyle.toolboxwidget" ExtensionSystem::Plugin(0x1848768) - state: 16 -> 4
[20:59:28-843][DEBUG] [EVENT] > Plugin: "tech.microcore.dstyle.toolboxwidget" = 4
[20:59:28-843][DEBUG] [ "Resolved  " ]	 "tech.microcore.dstyle.toolboxwidget"
[20:59:28-847][DEBUG] PluginChanged: "tech.microcore.dstyle.toolboxwidget"  - state: 16 -> 4
[20:59:28-847][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 32 -> 16
[20:59:28-848][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.desktop" = 16
[20:59:28-848][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 32 -> 16
[20:59:28-848][DEBUG] [ExtensionHandler] > unregister "tech.microcore.mainwin.desktop.Exit"
[20:59:28-848][DEBUG] [ExtensionHandler] > unregister "tech.microcore.mainwin.desktop.Help"
[20:59:28-848][DEBUG] [ExtensionHandler] > unregister "tech.microcore.mainwin.desktop.AboutQt"
[20:59:28-848][DEBUG] [ExtensionHandler] > unregister "tech.microcore.mainwin.desktop.AboutUs"
[20:59:28-848][DEBUG] ~ControlPointManager
[20:59:28-849][DEBUG] ~StatusBarPointManager
[20:59:28-849][DEBUG] ~DockPointManager
[20:59:28-849][DEBUG] ~LayoutManager
[20:59:28-862][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.desktop" ExtensionSystem::Plugin(0x1848178) - state: 16 -> 4
[20:59:28-862][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.desktop" = 4
[20:59:28-862][DEBUG] [ "Resolved  " ]	 "tech.microcore.mainwin.desktop"
[20:59:28-862][DEBUG] PluginChanged: "tech.microcore.mainwin.desktop"  - state: 16 -> 4
[20:59:28-862][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 32 -> 16
[20:59:28-862][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.core" = 16
[20:59:28-862][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 32 -> 16
[20:59:28-862][DEBUG] [EVENT] > Service: 2
[20:59:28-863][DEBUG] [EVENT] > Service: 2
[20:59:28-863][DEBUG] [EVENT] > Service: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] [EVENT] > Extension: 2
[20:59:28-863][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.propertybrowser.property"
[20:59:28-863][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.dynamiclayout.contenttree"
[20:59:28-863][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demoproperty.demo"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demowindow.dockShow"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.undomanager.UndoView.UI"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.dragdroprobot.robot.UI"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.edit.UI"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.config.dynamiclayoutedit.UI"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demowindow.centralviewShow"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.slider1"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.ExitKLUJLU"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.Helpsvsddvgfsvgdsdvsv"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop. PrintEC"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.EditEC"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.Files"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.SaveEC"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.PicAc"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.toolButton.groupOther"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.OthersEC"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.groupHelpvvv"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.HelpECvsdv"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.lineedit"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.progressbar"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.core.layout.desktop"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "Format"
[20:59:28-864][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "MenuBar"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.MenuBarFile"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.ExportPdfActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.TextEditSaveActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.PrintActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.OpenActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.NewActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.OtherGroup"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.Exit"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.EditMenuBar"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.CopyActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.PasteActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.CutActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.RevokeActionHanler"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.ViewMenuBar"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.MenuBarView.Dock"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.MenuBarView.Centralview"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.aboutMenuBar"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.AboutQt"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.AboutUs"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.Help"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.ToolMenuBar"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.extsetdemo.show"
[20:59:28-865][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.pluginmanager.action.ShowPluginManagerDialog"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.config.optiondialog.show"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demowindow.controlShow"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demowindow.ExportPdfActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "ToolBars"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.toolbarPic"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.demoservice.edit"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.mainwin.desktop.actionid.menuAbout"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.dynamiclayout.edit"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.undomanager.UndoActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.service.undomanager.RedoActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.toolbarTextEdit2"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.BoldActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.ItalicActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.UnderlineActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.LeftActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.CenterActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.RightActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.JustifyActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.ColorActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.toolbarTextEdit1"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.toolbarFileHandle"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.toolbarTextEdit3"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.textStyleActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.textFontActionHanler"
[20:59:28-866][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.textedit.textSizeActionHanler"
[20:59:28-867][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.mainwin.core" ExtensionSystem::Plugin(0x1848788) - state: 16 -> 4
[20:59:28-867][DEBUG] [EVENT] > Plugin: "tech.microcore.mainwin.core" = 4
[20:59:28-867][DEBUG] [ "Resolved  " ]	 "tech.microcore.mainwin.core"
[20:59:28-867][DEBUG] PluginChanged: "tech.microcore.mainwin.core"  - state: 16 -> 4
[20:59:28-867][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 32 -> 16
[20:59:28-867][DEBUG] [EVENT] > Plugin: "tech.microcore.service.eventadmin" = 16
[20:59:28-867][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 32 -> 16
[20:59:28-867][DEBUG] [EVENT] > Service: 2
[20:59:28-867][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.eventadmin" ExtensionSystem::Plugin(0x5f36978) - state: 16 -> 4
[20:59:28-867][DEBUG] [EVENT] > Plugin: "tech.microcore.service.eventadmin" = 4
[20:59:28-867][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.eventadmin"
[20:59:28-867][DEBUG] PluginChanged: "tech.microcore.service.eventadmin"  - state: 16 -> 4
[20:59:28-867][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 32 -> 16
[20:59:28-867][DEBUG] [EVENT] > Plugin: "tech.microcore.config.dynamiclayoutedit" = 16
[20:59:28-867][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 32 -> 16
[20:59:28-868][DEBUG] [ExtensionHandler] > unregister "tech.microcore.config.dynamiclayoutedit.UI"
[20:59:28-868][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.dynamiclayoutedit" ExtensionSystem::Plugin(0x1837550) - state: 16 -> 4
[20:59:28-868][DEBUG] [EVENT] > Plugin: "tech.microcore.config.dynamiclayoutedit" = 4
[20:59:28-868][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.dynamiclayoutedit"
[20:59:28-868][DEBUG] PluginChanged: "tech.microcore.config.dynamiclayoutedit"  - state: 16 -> 4
[20:59:28-868][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 32 -> 16
[20:59:28-868][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.clock" = 16
[20:59:28-868][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 32 -> 16
[20:59:28-868][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.clock.dock.UI"
[20:59:28-868][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.clock" ExtensionSystem::Plugin(0x18481d8) - state: 16 -> 4
[20:59:28-868][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.clock" = 4
[20:59:28-868][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.clock"
[20:59:28-868][DEBUG] PluginChanged: "tech.microcore.demo.clock"  - state: 16 -> 4
[20:59:28-868][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 32 -> 16
[20:59:28-868][DEBUG] [EVENT] > Plugin: "tech.microcore.service.dynamiclayout" = 16
[20:59:28-868][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 32 -> 16
[20:59:28-869][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.dynamiclayout.edit"
[20:59:28-869][DEBUG] [ExtensionHandler] > unregister "tech.microcore.service.dynamiclayout.contenttree"
[20:59:28-869][DEBUG] [EVENT] > Service: 2
[20:59:28-870][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.service.dynamiclayout" ExtensionSystem::Plugin(0x1848288) - state: 16 -> 4
[20:59:28-870][DEBUG] [EVENT] > Plugin: "tech.microcore.service.dynamiclayout" = 4
[20:59:28-871][DEBUG] [ "Resolved  " ]	 "tech.microcore.service.dynamiclayout"
[20:59:28-871][DEBUG] PluginChanged: "tech.microcore.service.dynamiclayout"  - state: 16 -> 4
[20:59:28-871][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 32 -> 16
[20:59:28-871][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.settingdemo" = 16
[20:59:28-872][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 32 -> 16
[20:59:28-872][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.settingdemo.showPage"
[20:59:28-872][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.settingdemo" ExtensionSystem::Plugin(0x1848488) - state: 16 -> 4
[20:59:28-872][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.settingdemo" = 4
[20:59:28-872][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.settingdemo"
[20:59:28-872][DEBUG] PluginChanged: "tech.microcore.demo.settingdemo"  - state: 16 -> 4
[20:59:28-872][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 32 -> 16
[20:59:28-872][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.hellochina" = 16
[20:59:28-872][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 32 -> 16
[20:59:28-872][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.hellochina" ExtensionSystem::Plugin(0x1848558) - state: 16 -> 4
[20:59:28-872][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.hellochina" = 4
[20:59:28-872][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.hellochina"
[20:59:28-872][DEBUG] PluginChanged: "tech.microcore.demo.hellochina"  - state: 16 -> 4
[20:59:28-872][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 32 -> 16
[20:59:28-872][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.helloworld" = 16
[20:59:28-872][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 32 -> 16
[20:59:28-872][DEBUG] [EVENT] > Service: 2
[20:59:28-872][DEBUG] [EVENT] > Extension: 2
[20:59:28-872][DEBUG] [EVENT] > Extension: 2
[20:59:28-872][DEBUG] [EVENT] > Extension: 2
[20:59:28-872][DEBUG] [EVENT] > Extension: 2
[20:59:28-872][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.helloworld" ExtensionSystem::Plugin(0x18485d8) - state: 16 -> 4
[20:59:28-873][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.helloworld" = 4
[20:59:28-873][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.helloworld"
[20:59:28-873][DEBUG] PluginChanged: "tech.microcore.demo.helloworld"  - state: 16 -> 4
[20:59:28-873][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 32 -> 16
[20:59:28-873][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.audiorecorder" = 16
[20:59:28-873][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 32 -> 16
[20:59:28-873][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.audiorecorder" ExtensionSystem::Plugin(0x1848128) - state: 16 -> 4
[20:59:28-873][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.audiorecorder" = 4
[20:59:28-873][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.audiorecorder"
[20:59:28-873][DEBUG] PluginChanged: "tech.microcore.demo.audiorecorder"  - state: 16 -> 4
[20:59:28-873][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 32 -> 16
[20:59:28-873][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.extsetdemo" = 16
[20:59:28-873][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 32 -> 16
[20:59:28-873][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.extsetdemo.show"
[20:59:28-873][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.extsetdemo" ExtensionSystem::Plugin(0x1848518) - state: 16 -> 4
[20:59:28-874][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.extsetdemo" = 4
[20:59:28-874][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.extsetdemo"
[20:59:28-874][DEBUG] PluginChanged: "tech.microcore.demo.extsetdemo"  - state: 16 -> 4
[20:59:28-874][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 32 -> 16
[20:59:28-874][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoservice" = 16
[20:59:28-874][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 32 -> 16
[20:59:28-874][DEBUG] [ExtensionHandler] > unregister "tech.microcore.demo.demoservice.edit"
[20:59:28-874][DEBUG] [EVENT] > Service: 2
[20:59:28-874][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.demo.demoservice" ExtensionSystem::Plugin(0x18482b8) - state: 16 -> 4
[20:59:28-874][DEBUG] [EVENT] > Plugin: "tech.microcore.demo.demoservice" = 4
[20:59:28-874][DEBUG] [ "Resolved  " ]	 "tech.microcore.demo.demoservice"
[20:59:28-874][DEBUG] PluginChanged: "tech.microcore.demo.demoservice"  - state: 16 -> 4
[20:59:28-874][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 32 -> 16
[20:59:28-874][DEBUG] [EVENT] > Plugin: "tech.microcore.config.shortcutmanager" = 16
[20:59:28-874][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 32 -> 16
[20:59:28-874][DEBUG] [ExtensionHandler] > unregister "tech.microcore.config.shortcutmanager.action.ShowShortcutWidget.page1"
[20:59:28-874][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.shortcutmanager" ExtensionSystem::Plugin(0x1848198) - state: 16 -> 4
[20:59:28-874][DEBUG] [EVENT] > Plugin: "tech.microcore.config.shortcutmanager" = 4
[20:59:28-874][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.shortcutmanager"
[20:59:28-875][DEBUG] PluginChanged: "tech.microcore.config.shortcutmanager"  - state: 16 -> 4
[20:59:28-875][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 32 -> 16
[20:59:28-875][DEBUG] [EVENT] > Plugin: "tech.microcore.config.scenemanager" = 16
[20:59:28-875][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 32 -> 16
[20:59:28-875][DEBUG] [ExtensionHandler] > unregister "tech.microcore.config.scenemanager.action.ShowSceneManagertyWidget.page1"
[20:59:28-875][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.scenemanager" ExtensionSystem::Plugin(0x18480a8) - state: 16 -> 4
[20:59:28-875][DEBUG] [EVENT] > Plugin: "tech.microcore.config.scenemanager" = 4
[20:59:28-875][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.scenemanager"
[20:59:28-875][DEBUG] PluginChanged: "tech.microcore.config.scenemanager"  - state: 16 -> 4
[20:59:28-875][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 32 -> 16
[20:59:28-875][DEBUG] [EVENT] > Plugin: "tech.microcore.config.general" = 16
[20:59:28-875][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 32 -> 16
[20:59:28-875][DEBUG] [ExtensionHandler] > unregister "tech.microcore.config.general.startup"
[20:59:28-875][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.general" ExtensionSystem::Plugin(0x18372e0) - state: 16 -> 4
[20:59:28-875][DEBUG] [EVENT] > Plugin: "tech.microcore.config.general" = 4
[20:59:28-875][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.general"
[20:59:28-876][DEBUG] PluginChanged: "tech.microcore.config.general"  - state: 16 -> 4
[20:59:28-876][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 32 -> 16
[20:59:28-876][DEBUG] [EVENT] > Plugin: "tech.microcore.config.optiondialog" = 16
[20:59:28-876][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 32 -> 16
[20:59:28-876][DEBUG] [ExtensionHandler] > unregister "tech.microcore.config.optiondialog.show"
[20:59:28-876][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.optiondialog" ExtensionSystem::Plugin(0x1848078) - state: 16 -> 4
[20:59:28-876][DEBUG] [EVENT] > Plugin: "tech.microcore.config.optiondialog" = 4
[20:59:28-876][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.optiondialog"
[20:59:28-876][DEBUG] PluginChanged: "tech.microcore.config.optiondialog"  - state: 16 -> 4
[20:59:28-876][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 32 -> 16
[20:59:28-876][DEBUG] [EVENT] > Plugin: "tech.microcore.config.configureadmin" = 16
[20:59:28-876][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 32 -> 16
[20:59:28-876][DEBUG] [EVENT] > Service: 2
[20:59:28-898][DEBUG] void ExtensionSystem::Internal::PluginManagerPrivate::pluginStateChanaged(const QString&, int, int) > "tech.microcore.config.configureadmin" ExtensionSystem::Plugin(0x17d9000) - state: 16 -> 4
[20:59:28-898][DEBUG] [EVENT] > Plugin: "tech.microcore.config.configureadmin" = 4
[20:59:28-898][DEBUG] [ "Resolved  " ]	 "tech.microcore.config.configureadmin"
[20:59:28-898][DEBUG] PluginChanged: "tech.microcore.config.configureadmin"  - state: 16 -> 4
[20:59:28-898][DEBUG] [EVENT] > Framework: 4 to 2
[20:59:28-898][DEBUG] [EVENT] > Framework: 2 to 4
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.textedit, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.undomanager, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.propertybrowser, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.pluginmanager, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demoproperty, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demowindow, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.dragdroprobot, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.qtwindow, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.widget, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.coverwidget, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.scrollwidget, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.tabwidget, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.toolboxwidget, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.mainwin.desktop, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.mainwin.core, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.eventadmin, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.dynamiclayoutedit, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.clock, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.dynamiclayout, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.settingdemo, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.hellochina, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.helloworld, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.audiorecorder, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.extsetdemo, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demoservice, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.shortcutmanager, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.scenemanager, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.general, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.optiondialog, that is not actived"
[20:59:28-899][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.configureadmin, that is not actived"
[20:59:28-899][DEBUG] [EVENT] > Framework: 4 to 2
[20:59:28-913][DEBUG] [EVENT] > Framework: 2 to 4
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.textedit, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.undomanager, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.propertybrowser, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.pluginmanager, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demoproperty, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demowindow, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.dragdroprobot, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.qtwindow, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.widget, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.coverwidget, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.scrollwidget, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.tabwidget, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.dstyle.toolboxwidget, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.mainwin.desktop, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.mainwin.core, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.eventadmin, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.dynamiclayoutedit, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.clock, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.service.dynamiclayout, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.settingdemo, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.hellochina, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.helloworld, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.audiorecorder, that is not actived"
[20:59:28-913][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.extsetdemo, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.demo.demoservice, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.shortcutmanager, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.scenemanager, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.general, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.optiondialog, that is not actived"
[20:59:28-914][DEBUG] PluginManager::Error > "Cannot stop plugin: tech.microcore.config.configureadmin, that is not actived"
[20:59:28-914][DEBUG] [EVENT] > Framework: 4 to 2
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-914][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-915][DEBUG] virtual ExtensionSystem::Plugin::~Plugin() > false
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.dstyle.scrollwidget.dynamicLayout.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.dstyle.tabwidget.dynamicLayout.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.dstyle.coverwidget.dynamicLayout.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.dstyle.toolboxwidget.dynamicLayout.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.clock.dock.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.qtwindow.UI"
[20:59:28-917][DEBUG] virtual ExtensionSystem::ExtensionData::~ExtensionData() > "tech.microcore.demo.widget.UI"
